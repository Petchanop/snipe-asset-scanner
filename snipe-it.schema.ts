/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/hardware": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware
         * @description Return a listing of assets
         */
        get: operations["hardware-list"];
        put?: never;
        /**
         * /hardware
         * @description Creates a new asset
         */
        post: operations["hardware-create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/:id
         * @description Get the details of a specific asset
         */
        get: operations["hardware-by-id"];
        /**
         * /hardware/:id
         * @description Updates a specific asset
         */
        put: operations["hardware-update"];
        post?: never;
        /**
         * /hardware/:id
         * @description Deletes a specific asset
         */
        delete: operations["hardware-delete"];
        options?: never;
        head?: never;
        /**
         * /hardware/:id
         * @description Partially updates a specific asset
         */
        patch: operations["hardware-partial-update"];
        trace?: never;
    };
    "/companies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /companies/:id
         * @description Retrieve the specific details of a company by id
         */
        get: operations["companiesid"];
        /**
         * /companies/:id
         * @description Updates a company's details
         */
        put: operations["companiesid-1"];
        post?: never;
        /**
         * /companies/:id
         * @description Delete's a company
         */
        delete: operations["companiesid-3"];
        options?: never;
        head?: never;
        /**
         * /companies/:id
         * @description Updates a part of a company's details
         */
        patch: operations["companiesid-2"];
        trace?: never;
    };
    "/companies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /companies
         * @description Return a listing of companies
         */
        get: operations["companies"];
        put?: never;
        /**
         * /companies
         * @description Create a new company
         */
        post: operations["companies-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /locations
         * @description List locations
         */
        get: operations["locations"];
        put?: never;
        /**
         * /locations
         * @description Create a new location
         */
        post: operations["locations-2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users
         * @description List users
         */
        get: operations["users"];
        put?: never;
        /**
         * /users
         * @description Create a new user
         */
        post: operations["users-2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accessories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /accessories
         * @description Return a listing of accessories
         */
        get: operations["accessories"];
        put?: never;
        /**
         * /accessories
         * @description Create a new accessory
         */
        post: operations["accessories-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/models/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /models/:id
         * @description Retrieve the specific details of a model by id
         */
        get: operations["modelsid"];
        /**
         * /models/:id
         * @description Update a model
         */
        put: operations["modelsid-1"];
        post?: never;
        /**
         * /models/:id
         * @description Delete a model
         */
        delete: operations["modelsid-3"];
        options?: never;
        head?: never;
        /**
         * /models/:id
         * @description Update a model
         */
        patch: operations["modelsid-2"];
        trace?: never;
    };
    "/models": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /models
         * @description Returns a list of models
         */
        get: operations["models"];
        put?: never;
        /**
         * /models
         * @description Create a model
         */
        post: operations["models-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/statuslabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /statuslabels
         * @description Retrieve a list of status labels
         */
        get: operations["statuslabels"];
        put?: never;
        /**
         * /statuslabels
         * @description Create a new status label
         */
        post: operations["statuslabels-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locations/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /locations/:id
         * @description Get location details by id
         */
        get: operations["locations-1"];
        /**
         * /locations/:id
         * @description Updates a location
         */
        put: operations["locations-3"];
        post?: never;
        /**
         * /locations/:id
         * @description Deletes a location
         */
        delete: operations["locationsid-2"];
        options?: never;
        head?: never;
        /**
         * /locations/:id
         * @description Partially updates a location
         */
        patch: operations["locationsid"];
        trace?: never;
    };
    "/statuslabels/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /statuslabels/:id
         * @description View a status label
         */
        get: operations["statuslabelsid"];
        /**
         * /statuslabels/:id
         * @description Updates a status label
         */
        put: operations["statuslabelsid-2"];
        post?: never;
        /**
         * /statuslabels/:id
         * @description Delete a status label
         */
        delete: operations["statuslabelsid-1"];
        options?: never;
        head?: never;
        /**
         * /statuslabels/:id
         * @description Updates selected fields in a status label
         */
        patch: operations["statuslabelsid-3"];
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users/:id
         * @description View user details
         */
        get: operations["usersid"];
        /**
         * /users/:id
         * @description Update a user
         */
        put: operations["usersid-2"];
        post?: never;
        /**
         * /users/:id
         * @description Delete a user
         */
        delete: operations["usersid-1"];
        options?: never;
        head?: never;
        /**
         * /users/:id
         * @description Partially update a user, passing only the fields you want to modify
         */
        patch: operations["users-3"];
        trace?: never;
    };
    "/manufacturers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /manufacturers */
        get: operations["manufacturers"];
        put?: never;
        /**
         * /manufacturers
         * @description Create a manufacturer
         */
        post: operations["manufacturers-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /categories
         * @description List categories
         */
        get: operations["categories-1"];
        put?: never;
        /**
         * /categories
         * @description Create a Category
         */
        post: operations["categories-2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /categories/:id
         * @description Return a Category by id
         */
        get: operations["categoriesid-3"];
        /**
         * /categories/:id
         * @description Update a Category
         */
        put: operations["categoriesid"];
        post?: never;
        /**
         * /categories/:id
         * @description Delete a Category
         */
        delete: operations["categoriesid-2"];
        options?: never;
        head?: never;
        /**
         * /categories/:id
         * @description Update a Category
         */
        patch: operations["categoriesid-1"];
        trace?: never;
    };
    "/accessories/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /accessories/:id
         * @description Get the details on an accessory
         */
        get: operations["accessoriesid"];
        /**
         * /accessories/:id
         * @description Updates an accessory
         */
        put: operations["accessoriesid-1"];
        post?: never;
        /**
         * /accessories/:id
         * @description Deletes an accessory
         */
        delete: operations["accessoriesid-3"];
        options?: never;
        head?: never;
        /**
         * /accessories/:id
         * @description Selectively updates an accessory
         */
        patch: operations["accessoriesid-2"];
        trace?: never;
    };
    "/statuslabels/{id}/assetlist": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /statuslabels/:id/assetlist
         * @description View assets with a specific status label
         */
        get: operations["statuslabelsidassetlist"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/consumables/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /consumables/:id
         * @description Get the details on a consumable
         */
        get: operations["consumablesid"];
        /**
         * /consumables/:id
         * @description Updates a consumable
         */
        put: operations["consumables-2"];
        post?: never;
        /**
         * /consumables/:id
         * @description Deletes a consumable
         */
        delete: operations["consumablesid-2"];
        options?: never;
        head?: never;
        /**
         * /consumables/:id
         * @description Updates a portion of a consumable record
         */
        patch: operations["consumablesid-1"];
        trace?: never;
    };
    "/consumables": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /consumables
         * @description Return a listing of consumables
         */
        get: operations["consumables"];
        put?: never;
        /**
         * /consumables
         * @description Create a new consumable
         */
        post: operations["consumables-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/components": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /components
         * @description Return a listing of components
         */
        get: operations["components"];
        put?: never;
        /**
         * /components
         * @description Creates a component
         */
        post: operations["components-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/components/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /components/:id
         * @description Get the details on a component
         */
        get: operations["componentsid"];
        /**
         * /components/:id
         * @description Updates a component
         */
        put: operations["componentsid-1"];
        post?: never;
        /**
         * /components/:id
         * @description Deletes a component
         */
        delete: operations["componentsid-3"];
        options?: never;
        head?: never;
        /**
         * /components/:id
         * @description Updates a some details of a component
         */
        patch: operations["componentsid-2"];
        trace?: never;
    };
    "/hardware/{id}/checkout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /hardware/:id/checkout
         * @description Checkout an asset to a user, location or another asset
         */
        post: operations["hardware-checkout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fieldsets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /fieldsets
         * @description List all custom fieldsets
         */
        get: operations["fields"];
        put?: never;
        /**
         * /fieldsets
         * @description Create a Fieldset
         */
        post: operations["fieldsets"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/licenses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /licenses
         * @description Return a listing of licenses
         */
        get: operations["licenses"];
        put?: never;
        /** /licenses/ */
        post: operations["testinput"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fieldsets/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /fieldsets/:id
         * @description Return fieldset info by id
         */
        get: operations["fieldsetsid"];
        /**
         * /fieldsets/:id
         * @description Update a Fieldset
         */
        put: operations["fieldsetsid-1"];
        post?: never;
        /**
         * /fieldsets/:id
         * @description Delete a Fieldset
         */
        delete: operations["fieldsetsid-2"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/{id}/checkin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /hardware/:id/checkin
         * @description Checkin an asset
         */
        post: operations["hardware-checkin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users/:id/assets
         * @description Get a list of assets checked out to the user
         */
        get: operations["usersidassets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manufacturers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /manufacturers/:id
         * @description View a manufacturer
         */
        get: operations["manufacturersid-1"];
        /**
         * /manufacturers/:id
         * @description Update a Manufacturer
         */
        put: operations["manufacturersid-3"];
        post?: never;
        /**
         * /manufacturers/:id
         * @description Delete a manufacturer
         */
        delete: operations["manufacturersid-2"];
        options?: never;
        head?: never;
        /**
         * /manufacturers/:id
         * @description Partially update a Manufacturer
         */
        patch: operations["manufacturersid"];
        trace?: never;
    };
    "/licenses/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /licenses/:id */
        get: operations["licensesid"];
        /** /licenses/:id */
        put: operations["licensesid-1"];
        post?: never;
        /** /licenses/:id */
        delete: operations["licensesid-3"];
        options?: never;
        head?: never;
        /** /licenses/:id */
        patch: operations["licensesid-2"];
        trace?: never;
    };
    "/maintenances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /maintenances
         * @description List asset maintenances
         */
        get: operations["maintenances"];
        put?: never;
        /**
         * /maintenances
         * @description Create a new maintenance
         */
        post: operations["maintenances-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/byserial/{serial}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/byserial/:serial
         * @description Get the details of a specific asset by asset tag
         */
        get: operations["hardware-by-serial"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/audit": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /hardware/audit
         * @description Mark an asset as audited
         */
        post: operations["hardwareaudit"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/bytag/{asset_tag}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/bytag/:asset_tag
         * @description Get the details of a specific asset by asset tag
         */
        get: operations["hardware-by-asset-tag"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/departments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /departments
         * @description List departments
         */
        get: operations["departments"];
        put?: never;
        /**
         * /departments
         * @description Create a department
         */
        post: operations["departments-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/departments/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /departments/:id
         * @description View a department
         */
        get: operations["departmentsid"];
        /**
         * /departments/:id
         * @description Edit a department
         */
        put: operations["departments-edit"];
        post?: never;
        /**
         * /departments/:id
         * @description Delete a department
         */
        delete: operations["departmentsid-2"];
        options?: never;
        head?: never;
        /**
         * /departments/:id
         * @description Edit a department
         */
        patch: operations["departmentsid-1"];
        trace?: never;
    };
    "/users/{id}/licenses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users/:id/licenses
         * @description Get a list of licenses checked out to the user
         */
        get: operations["usersidlicenses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/{id}/licenses": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/:id/licenses
         * @description Get the licenses checked out to an asset
         */
        get: operations["hardwareidlicenses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/audit/due": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/audit/due
         * @description Retrieve a list of assets that are due for auditing soon.
         */
        get: operations["hardwareauditdue"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/audit/overdue": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /hardware/audit/overdue
         * @description Retrieve a list of assets that are overdue for auditing.
         */
        get: operations["hardwareauditoverdue"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}/accessories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users/:id/accessories
         * @description Get a list of accessories checked out to the user
         */
        get: operations["usersidaccessories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/maintenances/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * /maintenances/:id
         * @description Delete a maintenance
         */
        delete: operations["maintenancesid"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/components/{id}/assets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /components/:id/assets
         * @description Returns a list of which assets a component has been checked out to
         */
        get: operations["componentsidassets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accessories/{id}/checkout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /accessories/:id/checkout
         * @description Check an accessory out to a user
         */
        post: operations["accessories-checkout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/accessories/{id}/checkin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /accessories/:id/checkin
         * @description Checkin an accessory from a user
         */
        post: operations["accessories-checkin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fields/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /fields/:id
         * @description Return field info by id
         */
        get: operations["fieldsid"];
        /**
         * /fields/:id
         * @description Update a custom field
         */
        put: operations["update-fields"];
        post?: never;
        /**
         * /fields/:id
         * @description Delete a custom field
         */
        delete: operations["fieldsid-1"];
        options?: never;
        head?: never;
        /**
         * /fields/:id
         * @description Update a custom field
         */
        patch: operations["fieldsid-2"];
        trace?: never;
    };
    "/accessories/{id}/checkedout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /accessories/:id/checkedout
         * @description Show which users a specific accessory has been checked out to
         */
        get: operations["accessoriesidcheckedout"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/activity": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /reports/activity */
        get: operations["reportsactivity"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/consumables/{id}/checkout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /consumables/:id/checkout
         * @description Check an consumable out to a user
         */
        post: operations["consumablesidcheckout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fields/{id}/disassociate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /fields/:id/disassociate
         * @description Removed the association of a custom field with a fieldset
         */
        post: operations["fieldsiddisassociate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fields": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /fields
         * @description Returns a listing of available custom fields
         */
        get: operations["fields-1"];
        put?: never;
        /**
         * /fields
         * @description Create a custom field
         */
        post: operations["fields-2"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fields/{id}/associate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /fields/:id/associate
         * @description Associate a custom field with a custom fieldset
         */
        post: operations["fieldsidassociate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/components/{id}/checkin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /components/:id/checkin
         * @description Check a component back in from an asset
         */
        post: operations["componentsidcheckin"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fieldsets/{id}/fields": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /fieldsets/:id/fields
         * @description Return list of associated fields within a fieldset
         */
        get: operations["fieldsetsidfields"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/components/{id}/checkout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /components/:id/checkout
         * @description Check an accessory out to an asset
         */
        post: operations["componentsidcheckout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /users/me
         * @description Get details on the current user accessing the API
         */
        get: operations["usersme"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /groups/:id
         * @description Return a group
         */
        get: operations["groupsid"];
        /**
         * /groups/:id
         * @description Edit a group
         */
        put: operations["groupsid-2"];
        post?: never;
        /**
         * /groups/:id
         * @description Delete a group
         */
        delete: operations["groupsid-3"];
        options?: never;
        head?: never;
        /**
         * /groups/:id
         * @description Partially edit a group
         */
        patch: operations["groupsid-4"];
        trace?: never;
    };
    "/settings/backups/download/{file}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /settings/backups/download/:file */
        get: operations["backupsdownloadfile"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/settings/backups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /settings/backups */
        get: operations["backups-1"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/licenses/{id}/seats/{seat_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /licenses/:id/seats/:seat_id
         * @description Get details for one specific unique Seat ID for a particular license
         */
        get: operations["licensesidseatsseat_id"];
        /**
         * /licenses/:id/seats/:seat_id
         * @description Update user or asset a license is checked-out to (Check-in/Check-out)
         */
        put: operations["licensesidseatsseat_id-1"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * /licenses/:id/seats/:seat_id
         * @description Update user or asset a license is checked-out to (Check-in/Check-out)
         */
        patch: operations["licensesidseatsseat_id-2"];
        trace?: never;
    };
    "/groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /groups */
        get: operations["groups-1"];
        put?: never;
        /**
         * /groups
         * @description Create a group
         */
        post: operations["groupsid-1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/suppliers/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /suppliers/:id */
        get: operations["suppliersid"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/hardware/:id/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /hardware/:id/restore
         * @description Restore a deleted asset
         */
        post: operations["hardwareidrestore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/licenses/{id}/seats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /licenses/:id/seats
         * @description Return all unique Seat ID's for a particular license
         */
        get: operations["licensesidseats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/suppliers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** /suppliers */
        get: operations["suppliers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/maintenances/:id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * /maintenances/:id
         * @description Update selected fields in an existing maintenance
         */
        put: operations["maintenances-copy"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * /maintenances/:id
         * @description Update selected fields in an existing maintenance
         */
        patch: operations["maintenances-copy-1"];
        trace?: never;
    };
    "/users/{id}/restore": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * /users/:id/restore
         * @description Restore a soft-deleted user
         */
        post: operations["users-restore"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/models/{id}/files": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * /models/:id/files
         * @description Retrieve a model's files by model ID
         */
        get: operations["models-files-list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "hardware-list": {
        parameters: {
            query?: {
                /** @description Specify the number of results you wish to return. Defaults to 50, but we have it set to 2 by default so the API explorer doesn't scroll forever. */
                limit?: number;
                /** @description Offset to use */
                offset?: number;
                /** @description A text string to search the assets data for */
                search?: string;
                /** @description Return only assets associated with a specific order number */
                order_number?: string;
                /** @description Specify the column name you wish to sort by */
                sort?: string;
                /** @description Specify the order (asc or desc) you wish to order by on your sort column */
                order?: string;
                /** @description Optionally restrict asset results to this asset model ID */
                model_id?: number;
                /** @description Optionally restrict asset results to this status label ID */
                category_id?: number;
                /** @description Optionally restrict asset results to this asset model ID */
                manufacturer_id?: number;
                /** @description Optionally restrict asset results to this company ID */
                company_id?: number;
                /** @description Optionally restrict asset results to this location ID */
                location_id?: number;
                /** @description Optionally restrict asset results to one of these status types: RTD, Deployed, Undeployable, Deleted, Archived, Requestable */
                status?: string;
                /** @description Optionally restrict asset results to this status label ID */
                status_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1323
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1373
                             */
                            id: number;
                            /** @example  */
                            name?: string;
                            /** @example 86285367 */
                            asset_tag?: string;
                            /** @example 555f88f9-1f66-3c9e-8069-c1c883cfdb5b */
                            serial?: string;
                            model?: {
                                /**
                                 * @default 0
                                 * @example 18
                                 */
                                id: number;
                                /** @example Ultrasharp U2415 */
                                name?: string;
                            };
                            /** @example 2490747520276188 */
                            model_number?: string;
                            eol?: {
                                /** @example 2023-09-16 */
                                date?: string;
                                /** @example Sat Sep 16, 2023 */
                                formatted?: string;
                            };
                            status_label?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Ready to Deploy */
                                name?: string;
                                /** @example deployable */
                                status_type?: string;
                                /** @example deployable */
                                status_meta?: string;
                            };
                            category?: {
                                /**
                                 * @default 0
                                 * @example 5
                                 */
                                id: number;
                                /** @example Displays */
                                name?: string;
                            };
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                id: number;
                                /** @example Dell */
                                name?: string;
                            };
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                id: number;
                                /** @example Konopelski, Maggio and Wiegand */
                                name?: string;
                            };
                            /** @example Created by DB seeder */
                            notes?: string;
                            /** @example 26993588 */
                            order_number?: string;
                            company?: unknown;
                            location?: {
                                /**
                                 * @default 0
                                 * @example 10
                                 */
                                id: number;
                                /** @example Jonesshire */
                                name?: string;
                            };
                            rtd_location?: {
                                /**
                                 * @default 0
                                 * @example 10
                                 */
                                id: number;
                                /** @example Jonesshire */
                                name?: string;
                            };
                            /** @example https://develop.snipeitapp.com/uploads/models/ultrasharp.jpg */
                            image?: string;
                            /** @example https://develop.snipeitapp.com/uploads/barcodes/qr-86285367-1373.png */
                            qr?: string;
                            alt_barcode?: unknown;
                            assigned_to?: unknown;
                            warranty_months?: unknown;
                            warranty_expires?: unknown;
                            created_at?: {
                                /** @example 2022-12-19 15:42:29 */
                                datetime?: string;
                                /** @example Mon Dec 19, 2022 3:42PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2022-12-19 15:42:44 */
                                datetime?: string;
                                /** @example Mon Dec 19, 2022 3:42PM */
                                formatted?: string;
                            };
                            last_audit_date?: unknown;
                            next_audit_date?: unknown;
                            deleted_at?: unknown;
                            purchase_date?: {
                                /** @example 2022-09-16 */
                                date?: string;
                                /** @example Fri Sep 16, 2022 */
                                formatted?: string;
                            };
                            /** @example 3m 3d */
                            age?: string;
                            last_checkout?: unknown;
                            expected_checkin?: unknown;
                            /** @example 446,80 */
                            purchase_cost?: string;
                            /**
                             * @default 0
                             * @example 0
                             */
                            checkin_counter: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            checkout_counter: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            requests_counter: number;
                            /**
                             * @default true
                             * @example true
                             */
                            user_can_checkout: boolean;
                            custom_fields?: Record<string, never>;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                clone: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                restore: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example An Error has occured! Unauthenticated. */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
        };
    };
    "hardware-create": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description The asset tag of the asset. If auto-incrementing is enabled in the settings, this is not required and will be generated. */
                    asset_tag: string;
                    /**
                     * Format: int32
                     * @description The id of the related status label
                     */
                    status_id: number;
                    /**
                     * Format: int32
                     * @description The id of the related asset model
                     */
                    model_id: number;
                    /** @description Asset name */
                    name?: string;
                    /** @description data:@[mime];base64,[base64encodeddata] */
                    image?: string;
                    serial?: string;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: float */
                    purchase_cost?: number;
                    order_number?: string;
                    notes?: string;
                    /** @default false */
                    archived?: boolean;
                    /**
                     * Format: int32
                     * @default null
                     */
                    warranty_months?: number;
                    /** @default false */
                    depreciate?: boolean;
                    /**
                     * Format: int32
                     * @default null
                     */
                    supplier_id?: number;
                    /** @default false */
                    requestable?: boolean;
                    /**
                     * Format: int32
                     * @description The corresponding location_id from a location in the locations table that should indicate where the item is when it's NOT checked out to someone
                     * @default null
                     */
                    rtd_location_id?: number;
                    /** Format: date */
                    last_audit_date?: string;
                    /**
                     * Format: int32
                     * @default null
                     */
                    location_id?: number;
                    byod?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Asset created successfully. :) */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            model_id: number;
                            name?: unknown;
                            serial?: unknown;
                            /** @example  */
                            company_id?: string;
                            order_number?: unknown;
                            notes?: unknown;
                            /** @example SNIPE-IT-RULES */
                            asset_tag?: string;
                            /**
                             * @default 0
                             * @example 2
                             */
                            user_id: number;
                            /** @example 0 */
                            archived?: string;
                            /** @example 1 */
                            physical?: string;
                            /** @example 0 */
                            depreciate?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            status_id: number;
                            warranty_months?: unknown;
                            purchase_cost?: unknown;
                            purchase_date?: unknown;
                            assigned_to?: unknown;
                            supplier_id?: unknown;
                            /**
                             * @default 0
                             * @example 0
                             */
                            requestable: number;
                            rtd_location_id?: unknown;
                            /** @example 2017-10-19 08:43:45 */
                            updated_at?: string;
                            /** @example 2017-10-19 08:43:45 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 180
                             */
                            id: number;
                            model?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Macbook Pro 13" */
                                name?: string;
                                /** @example 4929525240061 */
                                model_number?: string;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                manufacturer_id: number;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                category_id: number;
                                /** @example 2017-10-18 21:00:07 */
                                created_at?: string;
                                /** @example 2017-10-18 21:00:07 */
                                updated_at?: string;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                depreciation_id: number;
                                /**
                                 * @default 0
                                 * @example 36
                                 */
                                eol: number;
                                image?: unknown;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                deprecated_mac_address: number;
                                fieldset_id?: unknown;
                                /** @example Created by demo seeder */
                                notes?: string;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                requestable: number;
                            };
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        messages?: {
                            status_id?: string[];
                        };
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "hardware-by-id": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not the asset tag) of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example  */
                        name?: string;
                        /** @example 1057931124 */
                        asset_tag?: string;
                        /** @example 24da9270-5631-3d1c-84e4-8de6fd40d92d */
                        serial?: string;
                        model?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Macbook Pro 13&quot; */
                            name?: string;
                        };
                        /** @example 2670166157847744 */
                        model_number?: string;
                        eol?: {
                            /** @example 2025-02-27 */
                            date?: string;
                            /** @example Thu Feb 27, 2025 */
                            formatted?: string;
                        };
                        status_label?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Ready to Deploy */
                            name?: string;
                            /** @example deployable */
                            status_type?: string;
                            /** @example deployed */
                            status_meta?: string;
                        };
                        category?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Laptops */
                            name?: string;
                        };
                        manufacturer?: unknown;
                        supplier?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Murphy, Prohaska and Hudson */
                            name?: string;
                        };
                        /** @example Created by DB seeder */
                        notes?: string;
                        /** @example 34391723 */
                        order_number?: string;
                        company?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 4
                             */
                            id: number;
                            /** @example Littlefurt */
                            name?: string;
                        };
                        rtd_location?: {
                            /**
                             * @default 0
                             * @example 9
                             */
                            id: number;
                            /** @example Port Lauryn */
                            name?: string;
                        };
                        /** @example https://develop.snipeitapp.com/uploads/models/mbp.jpg */
                        image?: string;
                        /** @example https://develop.snipeitapp.com/uploads/barcodes/qr-1057931124-1.png */
                        qr?: string;
                        alt_barcode?: unknown;
                        assigned_to?: {
                            /**
                             * @default 0
                             * @example 4
                             */
                            id: number;
                            /** @example Littlefurt */
                            name?: string;
                            /** @example location */
                            type?: string;
                        };
                        warranty_months?: unknown;
                        warranty_expires?: unknown;
                        created_at?: {
                            /** @example 2022-12-19 15:42:06 */
                            datetime?: string;
                            /** @example Mon Dec 19, 2022 3:42PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2022-12-19 15:42:44 */
                            datetime?: string;
                            /** @example Mon Dec 19, 2022 3:42PM */
                            formatted?: string;
                        };
                        last_audit_date?: unknown;
                        next_audit_date?: unknown;
                        deleted_at?: unknown;
                        purchase_date?: {
                            /** @example 2022-02-27 */
                            date?: string;
                            /** @example Sun Feb 27, 2022 */
                            formatted?: string;
                        };
                        /** @example 9m 22d */
                        age?: string;
                        last_checkout?: unknown;
                        expected_checkin?: unknown;
                        /** @example 2.297,10 */
                        purchase_cost?: string;
                        /**
                         * @default 0
                         * @example 0
                         */
                        checkin_counter: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        checkout_counter: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        requests_counter: number;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        custom_fields?: {
                            RAM?: {
                                /** @example _snipeit_ram_3 */
                                field?: string;
                                /** @example  */
                                value?: string;
                                /** @example ANY */
                                field_format?: string;
                                /** @example text */
                                element?: string;
                            };
                            CPU?: {
                                /** @example _snipeit_cpu_4 */
                                field?: string;
                                /** @example  */
                                value?: string;
                                /** @example ANY */
                                field_format?: string;
                                /** @example text */
                                element?: string;
                            };
                            "MAC Address"?: {
                                /** @example _snipeit_mac_address_5 */
                                field?: string;
                                /** @example  */
                                value?: string;
                                /** @example regex:/^([0-9a-fA-F]{2}[:-]){5}[0-9a-fA-F]{2}$/ */
                                field_format?: string;
                                /** @example text */
                                element?: string;
                            };
                        };
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example false
                             */
                            restore: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example false
                             */
                            delete: boolean;
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "hardware-update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Unique asset tag of the asset */
                    asset_tag: string;
                    /**
                     * Format: int32
                     * @description The id of the corresponding status label
                     */
                    status_id: number;
                    /**
                     * Format: int32
                     * @description The id of the associated asset model id
                     */
                    model_id: number;
                    /** @description Asset notes */
                    notes?: string;
                    /**
                     * Format: date
                     * @description Date the asset was last checked out
                     * @default null
                     */
                    last_checkout?: string;
                    /**
                     * Format: int32
                     * @description The ID of the user the asset should be checked out to
                     * @default null
                     */
                    assigned_user?: number;
                    /**
                     * Format: int32
                     * @description Thye ID of the user the location the asset should be checked out to
                     * @default null
                     */
                    assigned_location?: number;
                    /**
                     * Format: int32
                     * @description Thye ID of the other asset this asset should be checked out to
                     * @default null
                     */
                    assigned_asset?: number;
                    /**
                     * Format: int32
                     * @description The id of an associated company id
                     * @default null
                     */
                    company_id?: number;
                    /**
                     * @description Serial number of the asset
                     * @default null
                     */
                    serial?: string;
                    /** @description Order number for the asset */
                    order_number?: string;
                    /**
                     * Format: int32
                     * @description Number of months for the asset warranty
                     * @default null
                     */
                    warranty_months?: number;
                    /**
                     * Format: float
                     * @description Purchase cost of the asset, without a currency symbol
                     * @default null
                     */
                    purchase_cost?: number;
                    /**
                     * Format: date
                     * @description Date of asset purchase
                     * @default null
                     */
                    purchase_date?: string;
                    /**
                     * @description Whether or not the asset can be requested by users with the permission to request assets
                     * @default false
                     */
                    requestable?: boolean;
                    /**
                     * @description Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens
                     * @default false
                     */
                    archived?: boolean;
                    /**
                     * Format: int32
                     * @description The id that corresponds to the location where the asset is usually located when not checked out
                     * @default null
                     */
                    rtd_location_id?: number;
                    /**
                     * @description Asset name
                     * @default null
                     */
                    name?: string;
                    /**
                     * Format: int32
                     * @default null
                     */
                    location_id?: number;
                    /**
                     * Format: binary
                     * @default null
                     */
                    image?: string;
                    /** Format: int32 */
                    byod?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Asset updated successfully. */
                        messages?: string;
                    };
                };
            };
        };
    };
    "hardware-delete": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the asset to delete */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example Unauthenticated. */
                        error?: string;
                    };
                };
            };
            /** @description 404 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
        };
    };
    "hardware-partial-update": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Unique asset tag of the asset */
                    asset_tag?: string;
                    /**
                     * @description Asset notes
                     * @default null
                     */
                    notes?: string;
                    /**
                     * Format: int32
                     * @description The id of the corresponding status label
                     */
                    status_id?: number;
                    /**
                     * Format: int32
                     * @description The id of the associated asset model id
                     */
                    model_id?: number;
                    /**
                     * Format: date
                     * @description Date the asset was last checked out
                     */
                    last_checkout?: string;
                    /**
                     * Format: int32
                     * @description The ID of the user the asset should be checked out to
                     * @default null
                     */
                    assigned_user?: number;
                    /**
                     * Format: int32
                     * @description The ID of the user the location should be checked out to
                     * @default null
                     */
                    assigned_location?: number;
                    /**
                     * Format: int32
                     * @description The ID of the other asset the asset should be checked out to
                     * @default null
                     */
                    assigned_asset?: number;
                    /**
                     * Format: int32
                     * @description The id of an associated company id
                     * @default null
                     */
                    company_id?: number;
                    /**
                     * @description Serial number of the asset
                     * @default null
                     */
                    serial?: string;
                    /**
                     * @description Order number for the asset
                     * @default null
                     */
                    order_number?: string;
                    /**
                     * Format: int32
                     * @description Number of months for the asset warranty
                     * @default null
                     */
                    warranty_months?: number;
                    /**
                     * Format: float
                     * @description Purchase cost of the asset, without a currency symbol
                     * @default null
                     */
                    purchase_cost?: number;
                    /**
                     * Format: date
                     * @description Date of asset purchase
                     * @default null
                     */
                    purchase_date?: string;
                    /**
                     * @description Whether or not the asset can be requested by users with the permission to request assets
                     * @default false
                     */
                    requestable?: boolean;
                    /**
                     * @description Whether or not the asset is archived. Archived assets cannot be checked out and do not show up in the deployable asset screens
                     * @default false
                     */
                    archived?: boolean;
                    /**
                     * Format: int32
                     * @description The id that corresponds to the location where the asset is usually located when not checked out
                     * @default null
                     */
                    rtd_location_id?: number;
                    /**
                     * @description Asset name
                     * @default null
                     */
                    name?: string;
                    /** @default null */
                    location_id?: string;
                    /** Format: int32 */
                    byod?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 404 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 500 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        messages?: {
                            status_id?: string[];
                        };
                    };
                };
            };
        };
    };
    companiesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description company id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example Lebsack and Sons */
                        name?: string;
                        image?: unknown;
                        created_at?: {
                            /** @example 2017-11-22 05:28:00 */
                            datetime?: string;
                            /** @example Wed Nov 22, 2017 5:28AM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-11-22 05:28:00 */
                            datetime?: string;
                            /** @example Wed Nov 22, 2017 5:28AM */
                            formatted?: string;
                        };
                        /**
                         * @default 0
                         * @example 0
                         */
                        assets_count: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        licenses_count: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        accessories_count: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        consumables_count: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        components_count: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        users_count: number;
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example An Error has occured! Unauthenticated. */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
            /** @description 404 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
        };
    };
    "companiesid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description company id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "companiesid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description company id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The Company was deleted successfully. */
                        messages?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "companiesid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description company id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    companies: {
        parameters: {
            query?: {
                /** @description Company name */
                name?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 4
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Lebsack and Sons */
                            name?: string;
                            image?: unknown;
                            created_at?: {
                                /** @example 2017-11-22 05:28:00 */
                                datetime?: string;
                                /** @example Wed Nov 22, 2017 5:28AM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2017-11-22 05:28:00 */
                                datetime?: string;
                                /** @example Wed Nov 22, 2017 5:28AM */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 0
                             */
                            assets_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            licenses_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            accessories_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            consumables_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            components_count: number;
                            /**
                             * @default 0
                             * @example 13
                             */
                            users_count: number;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example An Error has occured! Unauthenticated. */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
        };
    };
    "companies-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @default Google, inc. */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        payload?: {
                            /** @example Vloorb */
                            name?: string;
                            /** @example 2017-01-12 19:56:33 */
                            updated_at?: string;
                            /** @example 2017-01-12 19:56:33 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 14
                             */
                            id: number;
                        };
                        /** @example Company created successfully. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    locations: {
        parameters: {
            query?: {
                name?: string;
                /** @description Number of results to return */
                limit?: number;
                /** @description Offset to use when retrieving results (useful in pagination) */
                offset?: number;
                /** @description Search string */
                search?: string;
                /** @description Field to order by */
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                address?: string;
                address2?: string;
                city?: string;
                zip?: string;
                country?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "locations-2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    address?: string;
                    address2?: string;
                    city?: string;
                    state?: string;
                    country?: string;
                    zip?: string;
                    ldap_ou?: string;
                    /** Format: int32 */
                    parent_id?: number;
                    currency?: string;
                    /** Format: int32 */
                    manager_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    users: {
        parameters: {
            query?: {
                /** @description String to search on */
                search?: string;
                /** @description Number of records to return */
                limit?: number;
                /** @description Offset to use when retrieving results (useful in pagination) */
                offset?: number;
                /** @description Field to order by */
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                first_name?: string;
                last_name?: string;
                username?: string;
                email?: string;
                employee_num?: string;
                state?: string;
                zip?: string;
                country?: string;
                group_id?: number;
                department_id?: number;
                company_id?: number;
                location_id?: number;
                /** @description Set this to "true" if you want to return only deleted users */
                deleted?: boolean;
                /** @description Set this to "true" if you want both deleted and active users */
                all?: boolean;
                /** @description Whether the user was imported/synched with LDAP - should be 0 or 1 */
                ldap_import?: boolean;
                /** @description Number of checked out assets */
                assets_count?: number;
                /** @description Number of checked out licenses */
                licenses_count?: number;
                /** @description Number of checked out accessories */
                accessories_count?: number;
                /** @description Number of checked out consumables */
                consumables_count?: number;
                /** @description Whether the user is marked as a remote worker or not (should be 0 or 1) */
                remote?: boolean;
                /** @description Whether or not the user is marked as a VIP (1 or 0 for true or false, respectively) */
                vip?: number;
                start_date?: string;
                end_date?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "users-2": {
        parameters: {
            query?: never;
            header?: {
                Accept?: string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    first_name: string;
                    last_name?: string;
                    username: string;
                    password: string;
                    /** @description Needs to match the 'password' exactly */
                    password_confirmation: string;
                    email?: string;
                    permissions?: string;
                    activated?: boolean;
                    phone?: string;
                    jobtitle?: string;
                    /** Format: int32 */
                    manager_id?: number;
                    employee_num?: string;
                    notes?: string;
                    /** Format: int32 */
                    company_id?: number;
                    two_factor_enrolled?: boolean;
                    two_factor_optin?: boolean;
                    /** Format: int32 */
                    department_id?: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** @description Whether or not the user is a remote worker */
                    remote?: boolean;
                    /**
                     * Format: int32
                     * @description ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]
                     * @default null
                     */
                    groups?: number;
                    /** @default false */
                    autoassign_licenses?: boolean;
                    /** @default false */
                    vip?: boolean;
                    /** Format: date */
                    start_date?: string;
                    /** Format: date */
                    end_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    accessories: {
        parameters: {
            query?: {
                /** @description Specify the number of results you wish to return */
                limit?: number;
                /** @description Offset to use */
                offset?: number;
                /** @description A text string to search the assets data for */
                search?: string;
                /** @description Return only assets associated with a specific order number */
                order_number?: string;
                /** @description Specify the column name you wish to sort by */
                sort?: string;
                /** @description Specify the order (asc or desc) you wish to order by on your sort column */
                order?: string;
                /** @description Whether to include detailed information on categories, etc (true) or just the text name (false) */
                expand?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 4
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example USB Keyboard */
                            name?: string;
                            company?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Apple */
                                name?: string;
                            };
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Beier, Von and Schoen */
                                name?: string;
                            };
                            /** @example 2033154 */
                            model_number?: string;
                            category?: {
                                /**
                                 * @default 0
                                 * @example 8
                                 */
                                id: number;
                                /** @example Keyboards */
                                name?: string;
                            };
                            location?: {
                                /**
                                 * @default 0
                                 * @example 5
                                 */
                                id: number;
                                /** @example South Fred */
                                name?: string;
                            };
                            notes?: unknown;
                            /**
                             * @default 0
                             * @example 15
                             */
                            qty: number;
                            purchase_date?: unknown;
                            purchase_cost?: unknown;
                            order_number?: unknown;
                            /**
                             * @default 0
                             * @example 2
                             */
                            min_qty: number;
                            /**
                             * @default 0
                             * @example 15
                             */
                            remaining_qty: number;
                            image?: unknown;
                            created_at?: {
                                /** @example 2018-10-09 19:07:31 */
                                datetime?: string;
                                /** @example 2018-10-09 07:07 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-10-09 19:07:31 */
                                datetime?: string;
                                /** @example 2018-10-09 07:07 PM */
                                formatted?: string;
                            };
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                            /**
                             * @default true
                             * @example true
                             */
                            user_can_checkout: boolean;
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "accessories-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /**
                     * Format: int32
                     * @description Quantity of the accessory you have
                     */
                    qty: number;
                    /** @description Order number for this accessory. */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of item being purchased.
                     */
                    purchase_cost?: number;
                    /** @description Date accessory was purchased */
                    purchase_date?: string;
                    /** @description Model number of Accessory */
                    model_number?: string;
                    /**
                     * Format: int32
                     * @description ID number of the category the accessory belongs to
                     */
                    category_id: number;
                    /**
                     * Format: int32
                     * @description ID Number of the company the accessory is assigned to
                     */
                    company_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the location the accessory is assigned to
                     */
                    location_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the manufacturer for this accessory.
                     */
                    manufacturer_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the supplier for this accessory
                     */
                    supplier_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    modelsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description model id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "modelsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description model id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                    /** @description Part or model number of the model */
                    model_number?: string;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    manufacturer_id?: number;
                    /**
                     * Format: int32
                     * @description The ID of an EXISTING custom fieldset
                     */
                    fieldset_id?: number;
                    /**
                     * Format: int32
                     * @description Number of months until this model's assets are considered EOL
                     */
                    eol?: number;
                    /** Format: int32 */
                    depreciation_id?: number;
                    notes?: string;
                    requestable?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "modelsid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description model id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "modelsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description model id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    model_number?: string;
                    /** Format: int32 */
                    fieldset_id?: number;
                    /** Format: int32 */
                    manufacturer_id?: number;
                    /** Format: int32 */
                    category_id?: number;
                    /** Format: int32 */
                    depreciation_id?: number;
                    notes?: string;
                    requestable?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    models: {
        parameters: {
            query?: {
                /** @description Number of records to return */
                limit?: number;
                /** @description Offset to use when retrieving results (useful in pagination) */
                offset?: number;
                /** @description Search string */
                search?: string;
                /** @description Field to order by */
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                /** @description Name of the asset model */
                name?: string;
                /** @description Model notes */
                notes?: string;
                /** @description Model number */
                model_number?: string;
                /** @description Whether or not the model is requestable */
                requestable?: "true" | "false";
                /** @description Filter by category ID */
                category_id?: number;
                /** @description Filter by depreciation ID */
                depreciation_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "models-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                    /** @description Part or model number of the model */
                    model_number?: string;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    manufacturer_id?: number;
                    /**
                     * Format: int32
                     * @description Number of months until this model's assets are considered EOL
                     */
                    eol?: number;
                    /**
                     * Format: int32
                     * @description The ID of an EXISTING custom fieldset
                     */
                    fieldset_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    statuslabels: {
        parameters: {
            query?: {
                name?: string;
                /** @description Number of records to return */
                limit?: number;
                /** @description Offset to use when retrieving results (useful in pagination) */
                offset?: number;
                /** @description String to search on */
                search?: string;
                /** @description Field to order by */
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                status_type?: "deployable" | "undeployable" | "pending" | "archived";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 5
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 8
                             */
                            id: number;
                            /** @example API TEST */
                            name?: string;
                            /** @example deployable */
                            type?: string;
                            color?: unknown;
                            /**
                             * @default true
                             * @example false
                             */
                            show_in_nav: boolean;
                            /**
                             * @default 0
                             * @example 0
                             */
                            assets_count: number;
                            /** @example  */
                            notes?: string;
                            created_at?: {
                                /** @example 2017-11-22 10:37:07 */
                                datetime?: string;
                                /** @example Wed Nov 22, 2017 10:37AM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2017-11-22 10:37:07 */
                                datetime?: string;
                                /** @example Wed Nov 22, 2017 10:37AM */
                                formatted?: string;
                            };
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "statuslabels-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /**
                     * @default deployable
                     * @enum {string}
                     */
                    type: "deployable" | "pending" | "archived" | "undeployable";
                    notes?: string;
                    /** @description Hex code showing what color the status label should be on the pie chart in the dashboard */
                    color?: string;
                    /**
                     * @description 1 or 0 - determine whether the status label should show in the left-side nav of the web GUI
                     * @default false
                     */
                    show_in_nav?: boolean;
                    /**
                     * @description 1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses
                     * @default false
                     */
                    default_label?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Status Label created successfully. */
                        messages?: string;
                        payload?: {
                            /** @example Test Status Label */
                            name?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            deployable: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            pending: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            archived: number;
                            /** @example 2017-11-22 10:37:07 */
                            updated_at?: string;
                            /** @example 2017-11-22 10:37:07 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 8
                             */
                            id: number;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "locations-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "locations-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    address?: string;
                    address2?: string;
                    city?: string;
                    state?: string;
                    country?: string;
                    zip?: string;
                    ldap_ou?: string;
                    currency?: string;
                    /** Format: int32 */
                    manager_id?: number;
                    /** Format: int32 */
                    parent_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "locationsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The location was deleted successfully. */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
        };
    };
    locationsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    address?: string;
                    address2?: string;
                    city?: string;
                    state?: string;
                    country?: string;
                    zip?: string;
                    currency?: string;
                    ldap_ou?: string;
                    /** Format: int32 */
                    manager_id?: number;
                    /** Format: int32 */
                    parent_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    statuslabelsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example Ready to Deploy */
                        name?: string;
                        /** @example deployable */
                        type?: string;
                        color?: unknown;
                        /**
                         * @default true
                         * @example false
                         */
                        show_in_nav: boolean;
                        /**
                         * @default 0
                         * @example 0
                         */
                        assets_count: number;
                        /** @example Illum voluptatem laboriosam sit consequatur fugiat. */
                        notes?: string;
                        created_at?: {
                            /** @example 2015-04-20 15:11:22 */
                            datetime?: string;
                            /** @example Mon Apr 20, 2015 3:11PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2004-02-18 13:58:18 */
                            datetime?: string;
                            /** @example Wed Feb 18, 2004 1:58PM */
                            formatted?: string;
                        };
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "statuslabelsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /**
                     * @default deployable
                     * @enum {string}
                     */
                    type: "deployable" | "pending" | "archived" | "undeployable";
                    notes?: string;
                    /** @description Hex code showing what color the status label should be on the pie chart in the dashboard */
                    color?: string;
                    /**
                     * @description 1 or 0 - determine whether the status label should show in the left-side nav of the web GUI
                     * @default false
                     */
                    show_in_nav?: boolean;
                    /**
                     * @description 1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses
                     * @default false
                     */
                    default_label?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Status Label created successfully. */
                        messages?: string;
                        payload?: {
                            /** @example Test Status Label */
                            name?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            deployable: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            pending: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            archived: number;
                            /** @example 2017-11-22 10:37:07 */
                            updated_at?: string;
                            /** @example 2017-11-22 10:37:07 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 8
                             */
                            id: number;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "statuslabelsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "statuslabelsid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /**
                     * @default deployable
                     * @enum {string}
                     */
                    type?: "deployable" | "pending" | "archived" | "undeployable";
                    notes?: string;
                    /** @description Hex code showing what color the status label should be on the pie chart in the dashboard */
                    color?: string;
                    /**
                     * @description 1 or 0 - determine whether the status label should show in the left-side nav of the web GUI
                     * @default false
                     */
                    show_in_nav?: boolean;
                    /**
                     * @description 1 or 0 - determine whether it should be bubbled up to the top of the list of available statuses
                     * @default false
                     */
                    default_label?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Status Label created successfully. */
                        messages?: string;
                        payload?: {
                            /** @example Test Status Label */
                            name?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            deployable: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            pending: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            archived: number;
                            /** @example 2017-11-22 10:37:07 */
                            updated_at?: string;
                            /** @example 2017-11-22 10:37:07 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 8
                             */
                            id: number;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    usersid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "usersid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    first_name?: string;
                    last_name?: string;
                    username?: string;
                    password?: string;
                    email?: string;
                    permissions?: string;
                    activated?: boolean;
                    phone?: string;
                    jobtitle?: string;
                    /** Format: int32 */
                    manager_id?: number;
                    employee_num?: string;
                    notes?: string;
                    /** Format: int32 */
                    company_id?: number;
                    two_factor_enrolled?: boolean;
                    two_factor_optin?: boolean;
                    /** Format: int32 */
                    department_id?: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** @description Whether or not the user is a remote worker (0 or 1) */
                    remote?: boolean;
                    /**
                     * Format: int32
                     * @description ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]
                     */
                    groups?: number;
                    /**
                     * Format: int32
                     * @default 0
                     */
                    vip?: number;
                    /** Format: date */
                    start_date?: string;
                    /** Format: date */
                    end_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "usersid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "users-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    first_name?: string;
                    last_name?: string;
                    username?: string;
                    password?: string;
                    email?: string;
                    permissions?: string;
                    activated?: boolean;
                    phone?: string;
                    jobtitle?: string;
                    /** Format: int32 */
                    manager_id?: number;
                    employee_num?: string;
                    notes?: string;
                    /** Format: int32 */
                    company_id?: number;
                    two_factor_enrolled?: boolean;
                    two_factor_optin?: boolean;
                    /** Format: int32 */
                    department_id?: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** @default false */
                    remote?: boolean;
                    /**
                     * Format: int32
                     * @description ID of the group or groups the user should be associated with. This can be a single ID number, or an array, like [1,2,3]
                     */
                    groups?: number;
                    /**
                     * Format: int32
                     * @default 0
                     */
                    vip?: number;
                    /** Format: date */
                    start_date?: string;
                    /** Format: date */
                    end_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    manufacturers: {
        parameters: {
            query?: {
                /** @description Name of the manufacturer */
                name?: string;
                url?: string;
                /** @description Support URL */
                support_url?: string;
                /** @description Support phone number */
                support_phone?: string;
                /** @description Support email */
                support_email?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 11
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Apple */
                            name?: string;
                            /** @example https://apple.com */
                            url?: string;
                            /** @example https://develop.snipeitapp.com/uploads/manufacturers/apple.jpg */
                            image?: string;
                            /** @example https://support.apple.com */
                            support_url?: string;
                            /** @example 1-585-974-5602 */
                            support_phone?: string;
                            /** @example nitzsche.keeley@example.org */
                            support_email?: string;
                            /**
                             * @default 0
                             * @example 159
                             */
                            assets_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            licenses_count: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            consumables_count: number;
                            /**
                             * @default 0
                             * @example 3
                             */
                            accessories_count: number;
                            created_at?: {
                                /** @example 2022-11-15 08:42:05 */
                                datetime?: string;
                                /** @example Tue Nov 15, 2022 8:42AM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2022-11-15 08:42:05 */
                                datetime?: string;
                                /** @example Tue Nov 15, 2022 8:42AM */
                                formatted?: string;
                            };
                            deleted_at?: unknown;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                restore: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
        };
    };
    "manufacturers-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Manufacturer name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "categories-1": {
        parameters: {
            query?: {
                /** @description Category name */
                name?: string;
                /** @description Number of results to return */
                limit?: number;
                /** @description Offset number (useful in pagination) */
                offset?: number;
                /** @description Search string */
                search?: string;
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                /** @description ID number of the category you'd like to filter by */
                category_id?: number;
                /** @description Type of category */
                category_type?: "asset" | "accessory" | "consumable" | "component" | "license";
                use_default_eula?: boolean;
                require_acceptance?: boolean;
                checkin_email?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "categories-2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Category name */
                    name: string;
                    /**
                     * @description (asset, accessory, consumable, component, license) - as of post-v5.2, this is no longer case sensitive
                     * @enum {string}
                     */
                    category_type: "asset" | "accessory" | "consumable" | "component" | "license";
                    /** @default false */
                    use_default_eula?: boolean;
                    /** @default false */
                    require_acceptance?: boolean;
                    /**
                     * @description Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?
                     * @default false
                     */
                    checkin_email?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "categoriesid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Category ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    categoriesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Category ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Category name */
                    name: string;
                    /**
                     * @description (asset, accessory, consumable, component, license) - as of post-v5.2, this is no longer case sensitive
                     * @enum {string}
                     */
                    category_type: "asset" | "accessory" | "consumable" | "component" | "license";
                    /** @default false */
                    use_default_eula?: boolean;
                    /** @default false */
                    require_acceptance?: boolean;
                    /**
                     * @description Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?
                     * @default false
                     */
                    checkin_email?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "categoriesid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Category ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "categoriesid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Category ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Category name */
                    name: string;
                    /** @description (asset, accessory, consumable, component) - as of post-v5.2, this is no longer case sensitive */
                    category_type: string;
                    /** @default false */
                    use_default_eula?: boolean;
                    /** @default false */
                    require_acceptance?: boolean;
                    /**
                     * @description Should the user be emailed the EULA and/or an acceptance confirmation email when this item is checked in?
                     * @default false
                     */
                    checkin_email?: boolean;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    accessoriesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "accessoriesid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /**
                     * Format: int32
                     * @description Quantity of the accessory you have
                     */
                    qty: number;
                    /**
                     * Format: int32
                     * @description ID number of the category the accessory belongs to
                     */
                    category_id: number;
                    /** @description Order number for this accessory. */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of item being purchased.
                     */
                    purchase_cost?: number;
                    /** @description Date accessory was purchased */
                    purchase_date?: string;
                    /** @description Model number of Accessory */
                    model_number?: string;
                    /**
                     * Format: int32
                     * @description ID Number of the company the accessory is assigned to
                     */
                    company_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the location the accessory is assigned to
                     */
                    location_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the manufacturer for this accessory.
                     */
                    manufacturer_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the supplier for this accessory
                     */
                    supplier_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "accessoriesid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "accessoriesid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name?: string;
                    /**
                     * Format: int32
                     * @description Quantity of the accessory you have
                     */
                    qty?: number;
                    /** @description Order number for this accessory. */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of item being purchased.
                     */
                    purchase_cost?: number;
                    /** @description Date accessory was purchased */
                    purchase_date?: string;
                    /** @description Model number of Accessory */
                    model_number?: string;
                    /**
                     * Format: int32
                     * @description ID number of the category the accessory belongs to
                     */
                    category_id?: number;
                    /**
                     * Format: int32
                     * @description ID Number of the company the accessory is assigned to
                     */
                    company_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the location the accessory is assigned to
                     */
                    location_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the manufacturer for this accessory.
                     */
                    manufacturer_id?: number;
                    /**
                     * Format: int32
                     * @description ID number of the supplier for this accessory
                     */
                    supplier_id?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    statuslabelsidassetlist: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    consumablesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "consumables-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    manufacturer_id?: string;
                    location_id?: string;
                    requestable?: boolean;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: int32 */
                    min_amt?: number;
                    model_number?: string;
                    item_no?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "consumablesid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "consumablesid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    manufacturer_id?: string;
                    location_id?: string;
                    requestable?: boolean;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: int32 */
                    min_amt?: number;
                    model_number?: string;
                    item_no?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    consumables: {
        parameters: {
            query?: {
                /** @description Consumable name */
                name?: string;
                /** @description Specify the number of results you wish to return */
                limit?: number;
                /** @description Offset to use */
                offset?: number;
                /** @description A text string to search the assets data for */
                search?: string;
                /** @description Return only assets associated with a specific order number */
                order_number?: string;
                /** @description Specify the column name you wish to sort by */
                sort?: string;
                /** @description Specify the order (asc or desc) you wish to order by on your sort column */
                order?: string;
                /** @description Whether to include detailed information on categories, etc (true) or just the text name (false) */
                expand?: string;
                /** @description Category ID to filter by */
                category_id?: number;
                /** @description Company ID to filter by */
                company_id?: number;
                /** @description Manufacturer ID to filter by */
                manufacturer_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Cardstock (White) */
                            name?: string;
                            image?: unknown;
                            category?: {
                                /**
                                 * @default 0
                                 * @example 10
                                 */
                                id: number;
                                /** @example Printer Paper */
                                name?: string;
                            };
                            company?: {
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                id: number;
                                /** @example Frami-Gleichner */
                                name?: string;
                            };
                            /** @example 39662828 */
                            item_no?: string;
                            location?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 10
                                 */
                                id: number;
                                /** @example Avery */
                                name?: string;
                            };
                            /**
                             * @default 0
                             * @example 0
                             */
                            min_amt: number;
                            model_number?: unknown;
                            /**
                             * @default 0
                             * @example 10
                             */
                            remaining: number;
                            /** @example 39883338 */
                            order_number?: string;
                            /** @example 24.42 */
                            purchase_cost?: string;
                            purchase_date?: {
                                /** @example 2018-01-20 */
                                date?: string;
                                /** @example 2018-01-20 */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 10
                             */
                            qty: number;
                            created_at?: {
                                /** @example 2018-10-09 19:09:21 */
                                datetime?: string;
                                /** @example 2018-10-09 07:09 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-10-15 20:04:07 */
                                datetime?: string;
                                /** @example 2018-10-15 08:04 PM */
                                formatted?: string;
                            };
                            /**
                             * @default true
                             * @example true
                             */
                            user_can_checkout: boolean;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "consumables-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    manufacturer_id?: string;
                    location_id?: string;
                    requestable?: boolean;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: int32 */
                    min_amt?: number;
                    model_number?: string;
                    item_no?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    components: {
        parameters: {
            query?: {
                name?: string;
                /** @description Specify the number of results you wish to return */
                limit?: number;
                /** @description Offset to use */
                offset?: number;
                /** @description A text string to search the assets data for */
                search?: string;
                /** @description Return only assets associated with a specific order number */
                order_number?: string;
                /** @description Specify the column name you wish to sort by */
                sort?: string;
                /** @description Specify the order (asc or desc) you wish to order by on your sort column */
                order?: string;
                /** @description Whether to include detailed information on categories, etc (true) or just the text name (false) */
                expand?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 4
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Crucial 4GB DDR3L-1600 SODIMM */
                            name?: string;
                            image?: unknown;
                            serial?: unknown;
                            location?: {
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                id: number;
                                /** @example Nikitaborough */
                                name?: string;
                            };
                            /**
                             * @default 0
                             * @example 10
                             */
                            qty: number;
                            /**
                             * @default 0
                             * @example 2
                             */
                            min_amt: number;
                            category?: {
                                /**
                                 * @default 0
                                 * @example 13
                                 */
                                id: number;
                                /** @example RAM */
                                name?: string;
                            };
                            /** @example 48349590 */
                            order_number?: string;
                            purchase_date?: {
                                /** @example 2017-11-28 */
                                date?: string;
                                /** @example 2017-11-28 */
                                formatted?: string;
                            };
                            /** @example 2.45 */
                            purchase_cost?: string;
                            /**
                             * @default 0
                             * @example 10
                             */
                            remaining: number;
                            company?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                id: number;
                                /** @example Hagenes, Kulas and Rutherford */
                                name?: string;
                            };
                            created_at?: {
                                /** @example 2018-10-09 19:09:21 */
                                datetime?: string;
                                /** @example 2018-10-09 07:09 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-10-09 19:09:21 */
                                datetime?: string;
                                /** @example 2018-10-09 07:09 PM */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_can_checkout: number;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "components-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: float */
                    purchase_cost?: number;
                    /** Format: int32 */
                    min_amt?: number;
                    serial?: string;
                    model_number?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    componentsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "componentsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: float */
                    purchase_cost?: number;
                    /** Format: int32 */
                    min_amt?: number;
                    serial?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "componentsid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "componentsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: int32 */
                    qty: number;
                    /** Format: int32 */
                    category_id: number;
                    /** Format: int32 */
                    location_id?: number;
                    /** Format: int32 */
                    company_id?: number;
                    order_number?: string;
                    /** Format: date */
                    purchase_date?: string;
                    /** Format: float */
                    purchase_cost?: number;
                    /** Format: int32 */
                    min_amt?: number;
                    serial?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "hardware-checkout": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not the asset tag) of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description Valid status ID
                     */
                    status_id: number;
                    /**
                     * @description Type of entity the asset is being checked out to: user, asset, or location
                     * @default user
                     * @enum {string}
                     */
                    checkout_to_type: "asset" | "location" | "user";
                    /**
                     * Format: int32
                     * @description The ID of the user to check the asset out to. Required if `checkout_to_type` is set to `user`
                     */
                    assigned_user?: number;
                    /**
                     * Format: int32
                     * @description The asset ID to associate the asset to. Required if `checkout_to_type` is set to `asset`
                     */
                    assigned_asset?: number;
                    /**
                     * Format: int32
                     * @description The location ID to check the asset out to. Required if `checkout_to_type` is set to `location`
                     */
                    assigned_location?: number;
                    /**
                     * Format: date
                     * @description Optional date the asset is expected to be checked in
                     */
                    expected_checkin?: string;
                    /**
                     * Format: date
                     * @description Optional date to override the checkout time of now
                     */
                    checkout_at?: string;
                    /** @description Optional new asset name. This is useful for changing the asset's name on new checkout, for example, an asset that was named "Anna's Macbook Pro" could be renamed on the fly when it's checked out to Elizabeth, to "Beth's Macbook Pro" */
                    name?: string;
                    /** @description Optional note about the checkout */
                    note?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    fields: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 2
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Mobile Devices */
                            name?: string;
                            fields?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                total: number;
                                rows?: {
                                    /**
                                     * @default 0
                                     * @example 1
                                     */
                                    id: number;
                                    /** @example IMEI */
                                    name?: string;
                                    /** @example _snipeit_imei_1 */
                                    db_column_name?: string;
                                    /** @example regex:/^[0-9]{15}$/ */
                                    format?: string;
                                    field_values?: unknown;
                                    field_values_array?: unknown;
                                    /** @example text */
                                    type?: string;
                                    /**
                                     * @default 0
                                     * @example 0
                                     */
                                    required: number;
                                    created_at?: {
                                        /** @example 2020-11-27 21:05:14 */
                                        datetime?: string;
                                        /** @example Fri Nov 27, 2020 9:05PM */
                                        formatted?: string;
                                    };
                                    updated_at?: {
                                        /** @example 2020-11-27 21:05:14 */
                                        datetime?: string;
                                        /** @example Fri Nov 27, 2020 9:05PM */
                                        formatted?: string;
                                    };
                                }[];
                            };
                            models?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                total: number;
                                rows?: {
                                    /**
                                     * @default 0
                                     * @example 15
                                     */
                                    id: number;
                                    /** @example iPhone 6s */
                                    name?: string;
                                }[];
                            };
                            created_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    fieldsets: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Fieldset name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    licenses: {
        parameters: {
            query?: {
                name?: string;
                product_key?: string;
                /** @description Specify the number of results you wish to return */
                limit?: number;
                /** @description Offset to use */
                offset?: number;
                /** @description A text string to search the assets data for */
                search?: string;
                /** @description Return only assets associated with a specific order number */
                order_number?: string;
                /** @description Specify the column name you wish to sort by */
                sort?: string;
                /** @description Specify the order (asc or desc) you wish to order by on your sort column */
                order?: string;
                /** @description Whether to include detailed information on categories, etc (true) or just the text name (false) */
                expand?: string;
                purchase_order?: string;
                /** @description Name of the person on the license */
                license_name?: string;
                /** @description Email address associated with license */
                license_email?: string;
                /** @description Manufacturer ID */
                manufacturer_id?: number;
                /** @description Supplier ID */
                supplier_id?: number;
                /** @description Category ID */
                category_id?: number;
                /** @description Depreciation ID */
                depreciation_id?: number;
                /** @description true / false */
                maintained?: boolean;
                /** @description Set to true to return deleted licenses */
                deleted?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 4
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Photoshop */
                            name?: string;
                            company?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 9
                                 */
                                id: number;
                                /** @example Adobe */
                                name?: string;
                            };
                            /** @example 0d5254fb-b9f9-342c-a210-5feba9ea08b0 */
                            product_key?: string;
                            /** @example 27709963 */
                            order_number?: string;
                            /** @example  */
                            purchase_order?: string;
                            purchase_date?: {
                                /** @example 2017-07-04 */
                                date?: string;
                                /** @example 2017-07-04 */
                                formatted?: string;
                            };
                            /** @example 299.99 */
                            purchase_cost?: string;
                            /** @example Created by DB seeder */
                            notes?: string;
                            expiration_date?: unknown;
                            /**
                             * @default 0
                             * @example 10
                             */
                            seats: number;
                            /**
                             * @default 0
                             * @example 10
                             */
                            free_seats_count: number;
                            /** @example Prof. Alba Sawayn */
                            license_name?: string;
                            /** @example merlin50@example.org */
                            license_email?: string;
                            /**
                             * @default true
                             * @example false
                             */
                            maintained: boolean;
                            supplier?: unknown;
                            created_at?: {
                                /** @example 2017-11-11 18:18:03 */
                                datetime?: string;
                                /** @example 2017-11-11 06:18 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2017-11-11 18:18:03 */
                                datetime?: string;
                                /** @example 2017-11-11 06:18 PM */
                                formatted?: string;
                            };
                            /**
                             * @default true
                             * @example true
                             */
                            user_can_checkout: boolean;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                clone: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    testinput: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Name of license being created */
                    name: string;
                    /**
                     * Format: int32
                     * @description Number of license seats owned.
                     */
                    seats: number;
                    /**
                     * Format: int32
                     * @description Valid license category ID
                     */
                    category_id: number;
                    /**
                     * Format: int32
                     * @description Id number of company license belongs to
                     */
                    company_id?: number;
                    /**
                     * Format: date
                     * @description Date of license expiration
                     */
                    expiration_date?: string;
                    /** @description Email address associated with license */
                    license_email?: string;
                    /** @description Name of license contact person */
                    license_name?: string;
                    serial?: string;
                    /** @description Maintained status of license. */
                    maintained?: boolean;
                    /**
                     * Format: int32
                     * @description ID number of manufacturer of license.
                     */
                    manufacturer_id?: number;
                    /** @description License Notes */
                    notes?: string;
                    /** @description Order number of license purchase */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of license
                     */
                    purchase_cost?: number;
                    /**
                     * Format: date
                     * @description Date of license purchase
                     */
                    purchase_date?: string;
                    /** @description Purchase Order # */
                    purchase_order?: string;
                    /** @description Is license reassignable? */
                    reassignable?: boolean;
                    /**
                     * Format: int32
                     * @description ID number of license supplier
                     */
                    supplier_id?: number;
                    /**
                     * Format: date
                     * @description Termination date for license.
                     */
                    termination_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example License created successfully. */
                        messages?: string;
                        payload?: {
                            /** @example TEST License */
                            name?: string;
                            /** @example 25 */
                            seats?: string;
                            /** @example 2018-02-25 18:23:49 */
                            updated_at?: string;
                            /** @example 2018-02-25 18:23:49 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 9
                             */
                            id: number;
                        };
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    fieldsetsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID number of the fieldset */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example Asset with MAC Address */
                        name?: string;
                        fields?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            total: number;
                            rows?: {
                                /** @example Quality-focused local GraphicalUserInterface */
                                name?: string;
                                /** @example _snipeit_quality_focused_local_graphicaluserinterf_2 */
                                db_column_name?: string;
                                /** @example IP */
                                format?: string;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                required: number;
                                created_at?: {
                                    /** @example 2017-10-30 21:00:42 */
                                    datetime?: string;
                                    /** @example Mon Oct 30, 2017 9:00PM */
                                    formatted?: string;
                                };
                                updated_at?: {
                                    /** @example 2017-10-30 21:00:42 */
                                    datetime?: string;
                                    /** @example Mon Oct 30, 2017 9:00PM */
                                    formatted?: string;
                                };
                            }[];
                        };
                        models?: {
                            /**
                             * @default 0
                             * @example 0
                             */
                            total: number;
                            rows?: unknown[];
                        };
                        created_at?: unknown;
                        updated_at?: unknown;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "fieldsetsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 2
                             */
                            id: number;
                            /** @example Updated Laptop Fields */
                            name?: string;
                            /** @example 2017-01-18 04:42:35 */
                            created_at?: string;
                            /** @example 2017-07-12 20:07:41 */
                            updated_at?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                        };
                        /** @example Fieldset updated successfully. */
                        messages?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "fieldsetsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The fieldset was deleted successfully. */
                        messages?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "hardware-checkin": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not the asset tag) of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @default null
                     */
                    status_id: number;
                    /** @default null */
                    name?: string;
                    /** @description Note about the checkin */
                    note?: string;
                    /** @description Updated Location for this item. */
                    location_id?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    usersidassets: {
        parameters: {
            query?: {
                /** @description Valid category ID to filter on within the user's assets */
                category_id?: number;
                /** @description Valid model ID to filter on user's assets */
                model_id?: string;
            };
            header?: never;
            path: {
                /** @description User id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "manufacturersid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Manufacturer ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "manufacturersid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Manufacturer ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "manufacturersid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Manufacturer ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    manufacturersid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Manufacturer ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    licensesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not name) of the license. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example Photoshop */
                        name?: string;
                        company?: unknown;
                        manufacturer?: {
                            /**
                             * @default 0
                             * @example 9
                             */
                            id: number;
                            /** @example Adobe */
                            name?: string;
                        };
                        /** @example 0d5254fb-b9f9-342c-a210-5feba9ea08b0 */
                        product_key?: string;
                        /** @example 27709963 */
                        order_number?: string;
                        /** @example  */
                        purchase_order?: string;
                        purchase_date?: {
                            /** @example 2017-07-04 */
                            date?: string;
                            /** @example 2017-07-04 */
                            formatted?: string;
                        };
                        /** @example 299.99 */
                        purchase_cost?: string;
                        /** @example Created by DB seeder */
                        notes?: string;
                        expiration_date?: unknown;
                        /**
                         * @default 0
                         * @example 10
                         */
                        seats: number;
                        /**
                         * @default 0
                         * @example 0
                         */
                        free_seats_count: number;
                        /** @example Prof. Alba Sawayn */
                        license_name?: string;
                        /** @example merlin50@example.org */
                        license_email?: string;
                        /**
                         * @default true
                         * @example false
                         */
                        maintained: boolean;
                        supplier?: unknown;
                        created_at?: {
                            /** @example 2017-11-11 18:18:03 */
                            datetime?: string;
                            /** @example 2017-11-11 06:18 PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-11-11 18:18:03 */
                            datetime?: string;
                            /** @example 2017-11-11 06:18 PM */
                            formatted?: string;
                        };
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "licensesid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID (not name) of license being updated */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Name of license being created */
                    name?: string;
                    /**
                     * Format: int32
                     * @description Valid license category ID
                     */
                    category_id: number;
                    /**
                     * Format: int32
                     * @description Id number of company license belongs to
                     */
                    company_id?: number;
                    /**
                     * Format: date
                     * @description Date of license expiration
                     */
                    expiration_date?: string;
                    /** @description Email address associated with license */
                    license_email?: string;
                    /** @description Name of license contact person */
                    license_name?: string;
                    /** @description Product key of the license */
                    serial?: string;
                    /** @description Maintained status of license. */
                    maintained?: boolean;
                    /**
                     * Format: int32
                     * @description ID number of manufacturer of license.
                     */
                    manufacturer_id?: number;
                    /** @description License Notes */
                    notes?: string;
                    /** @description Order number of license purchase */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of license
                     */
                    purchase_cost?: number;
                    /**
                     * Format: date
                     * @description Date of license purchase
                     */
                    purchase_date?: string;
                    /** @description Purchase Order # */
                    purchase_order?: string;
                    /** @description Is license reassignable? */
                    reassignable?: boolean;
                    /**
                     * Format: int32
                     * @description Number of license seats owned.
                     */
                    seats?: number;
                    /**
                     * Format: int32
                     * @description ID number of license supplier
                     */
                    supplier_id?: number;
                    /**
                     * Format: date
                     * @description Termination date for license.
                     */
                    termination_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "licensesid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID (not name) of license to delete */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The license was deleted successfully. */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "licensesid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID (not name) of license being updated */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Name of license being created */
                    name?: string;
                    /** @description Valid license category ID */
                    category_id?: string;
                    /**
                     * Format: int32
                     * @description Id number of company license belongs to
                     */
                    company_id?: number;
                    /**
                     * Format: date
                     * @description Date of license expiration
                     */
                    expiration_date?: string;
                    /** @description Email address associated with license */
                    license_email?: string;
                    /** @description Name of license contact person */
                    license_name?: string;
                    /** @description Product key of the license */
                    serial?: string;
                    /** @description Maintained status of license. */
                    maintained?: boolean;
                    /**
                     * Format: int32
                     * @description ID number of manufacturer of license.
                     */
                    manufacturer_id?: number;
                    /** @description License Notes */
                    notes?: string;
                    /** @description Order number of license purchase */
                    order_number?: string;
                    /**
                     * Format: float
                     * @description Cost of license
                     */
                    purchase_cost?: number;
                    /**
                     * Format: date
                     * @description Date of license purchase
                     */
                    purchase_date?: string;
                    /** @description Purchase Order # */
                    purchase_order?: string;
                    /** @description Is license reassignable? */
                    reassignable?: boolean;
                    /**
                     * Format: int32
                     * @description Number of license seats owned.
                     */
                    seats?: number;
                    /**
                     * Format: int32
                     * @description ID number of license supplier
                     */
                    supplier_id?: number;
                    /**
                     * Format: date
                     * @description Termination date for license.
                     */
                    termination_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    maintenances: {
        parameters: {
            query?: {
                /** @description Number of results to return */
                limit?: number;
                /** @description Offset to use when retrieving results (useful in pagination) */
                offset?: number;
                /** @description Search string */
                search?: string;
                /** @description Field to order by */
                sort?: string;
                /** @description Sort order (asc or desc) */
                order?: string;
                /** @description Asset ID of the asset you'd like to return maintenances for */
                asset_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 2
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 2
                             */
                            id: number;
                            asset?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Test Name */
                                name?: string;
                                /** @example 02948 */
                                asset_tag?: string;
                            };
                            /** @example Test with all fields */
                            title?: string;
                            location?: {
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                id: number;
                                /** @example East Pollyville */
                                name?: string;
                            };
                            /** @example This is a test */
                            notes?: string;
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                id: number;
                                /** @example Effertz, Langworth and Prohaska */
                                name?: string;
                            };
                            /** @example 100.00 */
                            cost?: string;
                            /** @example Repair */
                            asset_maintenance_type?: string;
                            start_date?: {
                                /** @example 2018-03-06 00:00:00 */
                                datetime?: string;
                                /** @example Tue Mar 06, 2018 12:00AM */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 20
                             */
                            asset_maintenance_time: number;
                            completion_date?: {
                                /** @example 2018-03-26 00:00:00 */
                                datetime?: string;
                                /** @example Mon Mar 26, 2018 12:00AM */
                                formatted?: string;
                            };
                            user_id?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                id: number;
                                /** @example Snipe E. Head */
                                name?: string;
                            };
                            created_at?: {
                                /** @example 2018-03-26 17:43:35 */
                                datetime?: string;
                                /** @example Mon Mar 26, 2018 5:43PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-03-26 17:43:35 */
                                datetime?: string;
                                /** @example Mon Mar 26, 2018 5:43PM */
                                formatted?: string;
                            };
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "maintenances-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    title: string;
                    /** Format: int32 */
                    asset_id: number;
                    /** Format: int32 */
                    supplier_id: number;
                    is_warranty?: boolean;
                    /** Format: float */
                    cost?: number;
                    notes?: string;
                    /** @enum {string} */
                    asset_maintenance_type: "Maintenance" | "Repair" | "PAT Test" | "Upgrade" | "Hardware Support" | "Software Support";
                    /** Format: date */
                    start_date: string;
                    /** Format: date */
                    completion_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "hardware-by-serial": {
        parameters: {
            query?: {
                /** @description true | false to include deleted items in your results */
                deleted?: boolean;
            };
            header?: never;
            path: {
                /** @description The serial number (not the ID) of the asset you'd like to query */
                serial: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example  */
                        name?: string;
                        /** @example 389658657 */
                        asset_tag?: string;
                        /** @example b9b47837-13d9-33d3-a7d3-815a8503be44 */
                        serial?: string;
                        model?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Macbook Pro 13&quot; */
                            name?: string;
                        };
                        /** @example 4929525240061 */
                        model_number?: string;
                        status_label?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Deployed */
                            name?: string;
                            /** @example deployed */
                            status_meta?: string;
                        };
                        category?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Laptops */
                            name?: string;
                        };
                        manufacturer?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Apple */
                            name?: string;
                        };
                        supplier?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Harvey-Hettinger */
                            name?: string;
                        };
                        /** @example Created by DB seeder */
                        notes?: string;
                        /** @example 4243135 */
                        order_number?: string;
                        company?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 3
                             */
                            id: number;
                            /** @example Tonystad */
                            name?: string;
                        };
                        rtd_location?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Lake Catharineburgh */
                            name?: string;
                        };
                        image?: unknown;
                        assigned_to?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example admin */
                            username?: string;
                            /** @example Admin User */
                            name?: string;
                            /** @example Admin */
                            first_name?: string;
                            /** @example User */
                            last_name?: string;
                            /** @example 19135 */
                            employee_number?: string;
                            /** @example user */
                            type?: string;
                        };
                        warranty?: unknown;
                        warranty_expires?: unknown;
                        created_at?: {
                            /** @example 2017-10-18 21:00:08 */
                            datetime?: string;
                            /** @example Wed Oct 18, 2017 9:00PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-10-19 07:57:37 */
                            datetime?: string;
                            /** @example Thu Oct 19, 2017 7:57AM */
                            formatted?: string;
                        };
                        purchase_date?: {
                            /** @example 2016-12-03 */
                            date?: string;
                            /** @example Sat Dec 03, 2016 */
                            formatted?: string;
                        };
                        last_checkout?: {
                            /** @example 2017-10-05 08:30:20 */
                            datetime?: string;
                            /** @example Thu Oct 05, 2017 8:30AM */
                            formatted?: string;
                        };
                        expected_checkin?: {
                            /** @example 2017-11-03 */
                            date?: string;
                            /** @example Fri Nov 03, 2017 */
                            formatted?: string;
                        };
                        /** @example 1114.86 */
                        purchase_cost?: string;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        custom_fields?: unknown[];
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    hardwareaudit: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description The asset tag of the asset you wish to audit */
                    asset_tag: string;
                    /**
                     * Format: int32
                     * @description ID of the location you want to associate with the audit
                     */
                    location_id?: number;
                    /**
                     * Format: date
                     * @description The desired next audit date for the asset. If unset, the default audit interval will be used instead
                     */
                    next_audit_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Asset audit successfully logged. */
                        messages?: string;
                        payload?: {
                            /** @example SNIPE-IT-RULES */
                            asset_tag?: string;
                            /** @example  */
                            note?: string;
                            next_audit_date?: {
                                /** @example 2019-07-05 00:00:00 */
                                datetime?: string;
                                /** @example Fri Jul 05, 2019 12:00AM */
                                formatted?: string;
                            };
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    "hardware-by-asset-tag": {
        parameters: {
            query?: {
                /** @description true | false to include deleted items in your results */
                deleted?: boolean;
            };
            header?: never;
            path: {
                /** @description The asset_tag (not the ID) of the asset you'd like to query */
                asset_tag: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example  */
                        name?: string;
                        /** @example 389658657 */
                        asset_tag?: string;
                        /** @example b9b47837-13d9-33d3-a7d3-815a8503be44 */
                        serial?: string;
                        model?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Macbook Pro 13&quot; */
                            name?: string;
                        };
                        /** @example 4929525240061 */
                        model_number?: string;
                        status_label?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Deployed */
                            name?: string;
                            /** @example deployed */
                            status_meta?: string;
                        };
                        category?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Laptops */
                            name?: string;
                        };
                        manufacturer?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Apple */
                            name?: string;
                        };
                        supplier?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Harvey-Hettinger */
                            name?: string;
                        };
                        /** @example Created by DB seeder */
                        notes?: string;
                        /** @example 4243135 */
                        order_number?: string;
                        company?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 3
                             */
                            id: number;
                            /** @example Tonystad */
                            name?: string;
                        };
                        rtd_location?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Lake Catharineburgh */
                            name?: string;
                        };
                        image?: unknown;
                        assigned_to?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example admin */
                            username?: string;
                            /** @example Admin User */
                            name?: string;
                            /** @example Admin */
                            first_name?: string;
                            /** @example User */
                            last_name?: string;
                            /** @example 19135 */
                            employee_number?: string;
                            /** @example user */
                            type?: string;
                        };
                        warranty?: unknown;
                        warranty_expires?: unknown;
                        created_at?: {
                            /** @example 2017-10-18 21:00:08 */
                            datetime?: string;
                            /** @example Wed Oct 18, 2017 9:00PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-10-19 07:57:37 */
                            datetime?: string;
                            /** @example Thu Oct 19, 2017 7:57AM */
                            formatted?: string;
                        };
                        purchase_date?: {
                            /** @example 2016-12-03 */
                            date?: string;
                            /** @example Sat Dec 03, 2016 */
                            formatted?: string;
                        };
                        last_checkout?: {
                            /** @example 2017-10-05 08:30:20 */
                            datetime?: string;
                            /** @example Thu Oct 05, 2017 8:30AM */
                            formatted?: string;
                        };
                        expected_checkin?: {
                            /** @example 2017-11-03 */
                            date?: string;
                            /** @example Fri Nov 03, 2017 */
                            formatted?: string;
                        };
                        /** @example 1114.86 */
                        purchase_cost?: string;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        custom_fields?: unknown[];
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    departments: {
        parameters: {
            query?: {
                name?: string;
                company_id?: number;
                manager_id?: number;
                location_id?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 6
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Human Resources */
                            name?: string;
                            image?: unknown;
                            company?: unknown;
                            manager?: unknown;
                            location?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                id: number;
                                /** @example North Alanis */
                                name?: string;
                            };
                            /** @example 8 */
                            users_count?: string;
                            created_at?: {
                                /** @example 2022-11-15 08:42:05 */
                                datetime?: string;
                                /** @example Tue Nov 15, 2022 8:42AM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2022-11-15 08:42:05 */
                                datetime?: string;
                                /** @example Tue Nov 15, 2022 8:42AM */
                                formatted?: string;
                            };
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
        };
    };
    "departments-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Department name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Department created successfully. */
                        messages?: string;
                        payload?: {
                            /** @example Human Resources */
                            name?: string;
                            /**
                             * @default 0
                             * @example 2
                             */
                            user_id: number;
                            manager_id?: unknown;
                            /** @example 2018-10-31 17:13:32 */
                            updated_at?: string;
                            /** @example 2018-10-31 17:13:32 */
                            created_at?: string;
                            /**
                             * @default 0
                             * @example 45
                             */
                            id: number;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    departmentsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example Human Resources */
                        name?: string;
                        image?: unknown;
                        company?: unknown;
                        manager?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Isobelside */
                            name?: string;
                        };
                        /** @example  */
                        users_count?: string;
                        created_at?: {
                            /** @example 2018-10-27 16:36:40 */
                            datetime?: string;
                            /** @example 2018-10-27 04:36 PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2018-10-27 16:36:40 */
                            datetime?: string;
                            /** @example 2018-10-27 04:36 PM */
                            formatted?: string;
                        };
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "departments-edit": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Department name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Department updated successfully. */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Human Resources */
                            name?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                            company_id?: unknown;
                            /**
                             * @default 0
                             * @example 1
                             */
                            location_id: number;
                            manager_id?: unknown;
                            notes?: unknown;
                            /** @example 2018-10-27 16:36:40 */
                            created_at?: string;
                            /** @example 2018-10-27 16:36:40 */
                            updated_at?: string;
                            deleted_at?: unknown;
                            image?: unknown;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "departmentsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Department ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example This department is currently associated with at least one user and cannot be deleted. Please update your users to no longer reference this department and try again.  */
                        messages?: string;
                        payload?: unknown;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "departmentsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Department name */
                    name: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Department updated successfully. */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Human Resources */
                            name?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                            company_id?: unknown;
                            /**
                             * @default 0
                             * @example 1
                             */
                            location_id: number;
                            manager_id?: unknown;
                            notes?: unknown;
                            /** @example 2018-10-27 16:36:40 */
                            created_at?: string;
                            /** @example 2018-10-27 16:36:40 */
                            updated_at?: string;
                            deleted_at?: unknown;
                            image?: unknown;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    usersidlicenses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 2
                             */
                            id: number;
                            /** @example Acrobat */
                            name?: string;
                            company?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 9
                                 */
                                id: number;
                                /** @example Adobe */
                                name?: string;
                            };
                            /** @example 935d7ada-f202-3a50-bf26-e6955b9ef675 */
                            product_key?: string;
                            /** @example 13745264 */
                            order_number?: string;
                            /** @example  */
                            purchase_order?: string;
                            purchase_date?: {
                                /** @example 2018-06-27 */
                                date?: string;
                                /** @example 2018-06-27 */
                                formatted?: string;
                            };
                            /** @example 29.99 */
                            purchase_cost?: string;
                            /** @example Created by DB seeder */
                            notes?: string;
                            expiration_date?: {
                                /** @example 2019-07-01 */
                                date?: string;
                                /** @example 2019-07-01 */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 10
                             */
                            seats: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            free_seats_count: number;
                            /** @example Sheridan Wilderman */
                            license_name?: string;
                            /** @example timothy30@example.com */
                            license_email?: string;
                            /**
                             * @default true
                             * @example false
                             */
                            maintained: boolean;
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Schimmel-Keebler */
                                name?: string;
                            };
                            category?: {
                                /**
                                 * @default 0
                                 * @example 14
                                 */
                                id: number;
                                /** @example Graphics Software */
                                name?: string;
                            };
                            created_at?: {
                                /** @example 2018-09-29 22:43:02 */
                                datetime?: string;
                                /** @example 2018-09-29 22:43 */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2019-01-21 14:24:06 */
                                datetime?: string;
                                /** @example 2019-01-21 14:24 */
                                formatted?: string;
                            };
                            /**
                             * @default true
                             * @example false
                             */
                            user_can_checkout: boolean;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                clone: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    hardwareidlicenses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not the asset tag) of the asset you'd like to query */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 2
                             */
                            id: number;
                            /** @example Acrobat */
                            name?: string;
                            company?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 9
                                 */
                                id: number;
                                /** @example Adobe */
                                name?: string;
                            };
                            /** @example d344600b-276c-3c08-9e40-633013b6bd17 */
                            product_key?: string;
                            /** @example 4448995 */
                            order_number?: string;
                            /** @example  */
                            purchase_order?: string;
                            purchase_date?: {
                                /** @example 2018-07-04 */
                                date?: string;
                                /** @example 2018-07-04 */
                                formatted?: string;
                            };
                            /** @example 29.99 */
                            purchase_cost?: string;
                            /** @example Created by DB seeder */
                            notes?: string;
                            expiration_date?: {
                                /** @example 2021-03-23 */
                                date?: string;
                                /** @example 2021-03-23 */
                                formatted?: string;
                            };
                            /**
                             * @default 0
                             * @example 10
                             */
                            seats: number;
                            /**
                             * @default 0
                             * @example 0
                             */
                            free_seats_count: number;
                            /** @example Mr. Alvah Shanahan PhD */
                            license_name?: string;
                            /** @example stracke.serena@example.net */
                            license_email?: string;
                            /**
                             * @default true
                             * @example false
                             */
                            maintained: boolean;
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Krajcik and Sons */
                                name?: string;
                            };
                            category?: {
                                /**
                                 * @default 0
                                 * @example 14
                                 */
                                id: number;
                                /** @example Graphics Software */
                                name?: string;
                            };
                            created_at?: {
                                /** @example 2018-12-05 15:38:02 */
                                datetime?: string;
                                /** @example 2018-12-05 03:38 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-12-05 15:38:02 */
                                datetime?: string;
                                /** @example 2018-12-05 03:38 PM */
                                formatted?: string;
                            };
                            /**
                             * @default true
                             * @example false
                             */
                            user_can_checkout: boolean;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                clone: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    hardwareauditdue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example  */
                        name?: string;
                        /** @example 389658657 */
                        asset_tag?: string;
                        /** @example b9b47837-13d9-33d3-a7d3-815a8503be44 */
                        serial?: string;
                        model?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Macbook Pro 13&quot; */
                            name?: string;
                        };
                        /** @example 4929525240061 */
                        model_number?: string;
                        status_label?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Deployed */
                            name?: string;
                            /** @example deployed */
                            status_meta?: string;
                        };
                        category?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Laptops */
                            name?: string;
                        };
                        manufacturer?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Apple */
                            name?: string;
                        };
                        supplier?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Harvey-Hettinger */
                            name?: string;
                        };
                        /** @example Created by DB seeder */
                        notes?: string;
                        /** @example 4243135 */
                        order_number?: string;
                        company?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 3
                             */
                            id: number;
                            /** @example Tonystad */
                            name?: string;
                        };
                        rtd_location?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Lake Catharineburgh */
                            name?: string;
                        };
                        image?: unknown;
                        assigned_to?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example admin */
                            username?: string;
                            /** @example Admin User */
                            name?: string;
                            /** @example Admin */
                            first_name?: string;
                            /** @example User */
                            last_name?: string;
                            /** @example 19135 */
                            employee_number?: string;
                            /** @example user */
                            type?: string;
                        };
                        warranty?: unknown;
                        warranty_expires?: unknown;
                        created_at?: {
                            /** @example 2017-10-18 21:00:08 */
                            datetime?: string;
                            /** @example Wed Oct 18, 2017 9:00PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-10-19 07:57:37 */
                            datetime?: string;
                            /** @example Thu Oct 19, 2017 7:57AM */
                            formatted?: string;
                        };
                        purchase_date?: {
                            /** @example 2016-12-03 */
                            date?: string;
                            /** @example Sat Dec 03, 2016 */
                            formatted?: string;
                        };
                        last_checkout?: {
                            /** @example 2017-10-05 08:30:20 */
                            datetime?: string;
                            /** @example Thu Oct 05, 2017 8:30AM */
                            formatted?: string;
                        };
                        expected_checkin?: {
                            /** @example 2017-11-03 */
                            date?: string;
                            /** @example Fri Nov 03, 2017 */
                            formatted?: string;
                        };
                        /** @example 1114.86 */
                        purchase_cost?: string;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        custom_fields?: unknown[];
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    hardwareauditoverdue: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        id: number;
                        /** @example  */
                        name?: string;
                        /** @example 389658657 */
                        asset_tag?: string;
                        /** @example b9b47837-13d9-33d3-a7d3-815a8503be44 */
                        serial?: string;
                        model?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Macbook Pro 13&quot; */
                            name?: string;
                        };
                        /** @example 4929525240061 */
                        model_number?: string;
                        status_label?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Deployed */
                            name?: string;
                            /** @example deployed */
                            status_meta?: string;
                        };
                        category?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Laptops */
                            name?: string;
                        };
                        manufacturer?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Apple */
                            name?: string;
                        };
                        supplier?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Harvey-Hettinger */
                            name?: string;
                        };
                        /** @example Created by DB seeder */
                        notes?: string;
                        /** @example 4243135 */
                        order_number?: string;
                        company?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 3
                             */
                            id: number;
                            /** @example Tonystad */
                            name?: string;
                        };
                        rtd_location?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Lake Catharineburgh */
                            name?: string;
                        };
                        image?: unknown;
                        assigned_to?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example admin */
                            username?: string;
                            /** @example Admin User */
                            name?: string;
                            /** @example Admin */
                            first_name?: string;
                            /** @example User */
                            last_name?: string;
                            /** @example 19135 */
                            employee_number?: string;
                            /** @example user */
                            type?: string;
                        };
                        warranty?: unknown;
                        warranty_expires?: unknown;
                        created_at?: {
                            /** @example 2017-10-18 21:00:08 */
                            datetime?: string;
                            /** @example Wed Oct 18, 2017 9:00PM */
                            formatted?: string;
                        };
                        updated_at?: {
                            /** @example 2017-10-19 07:57:37 */
                            datetime?: string;
                            /** @example Thu Oct 19, 2017 7:57AM */
                            formatted?: string;
                        };
                        purchase_date?: {
                            /** @example 2016-12-03 */
                            date?: string;
                            /** @example Sat Dec 03, 2016 */
                            formatted?: string;
                        };
                        last_checkout?: {
                            /** @example 2017-10-05 08:30:20 */
                            datetime?: string;
                            /** @example Thu Oct 05, 2017 8:30AM */
                            formatted?: string;
                        };
                        expected_checkin?: {
                            /** @example 2017-11-03 */
                            date?: string;
                            /** @example Fri Nov 03, 2017 */
                            formatted?: string;
                        };
                        /** @example 1114.86 */
                        purchase_cost?: string;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        custom_fields?: unknown[];
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Asset does not exist. */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
        };
    };
    usersidaccessories: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description User id */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 1
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example USB Keyboard */
                            name?: string;
                            company?: unknown;
                            manufacturer?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Apple */
                                name?: string;
                            };
                            supplier?: {
                                /**
                                 * @default 0
                                 * @example 2
                                 */
                                id: number;
                                /** @example Block and Sons */
                                name?: string;
                            };
                            /** @example 41230142 */
                            model_number?: string;
                            category?: {
                                /**
                                 * @default 0
                                 * @example 8
                                 */
                                id: number;
                                /** @example Keyboards */
                                name?: string;
                            };
                            location?: {
                                /**
                                 * @default 0
                                 * @example 4
                                 */
                                id: number;
                                /** @example East Caseyhaven */
                                name?: string;
                            };
                            notes?: unknown;
                            /**
                             * @default 0
                             * @example 15
                             */
                            qty: number;
                            purchase_date?: unknown;
                            purchase_cost?: unknown;
                            order_number?: unknown;
                            /**
                             * @default 0
                             * @example 2
                             */
                            min_qty: number;
                            /**
                             * @default 0
                             * @example 14
                             */
                            remaining_qty: number;
                            /** @example https://snipe-it.local:8890/uploads/accessories/usb-keyboard.jpg */
                            image?: string;
                            created_at?: {
                                /** @example 2018-12-05 15:37:21 */
                                datetime?: string;
                                /** @example 2018-12-05 03:37 PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2018-12-05 15:37:21 */
                                datetime?: string;
                                /** @example 2018-12-05 03:37 PM */
                                formatted?: string;
                            };
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example false
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                            /**
                             * @default true
                             * @example true
                             */
                            user_can_checkout: boolean;
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    maintenancesid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Maintenance ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The asset maintenance was deleted successfully. */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /**
                             * @default 0
                             * @example 1
                             */
                            asset_id: number;
                            /**
                             * @default 0
                             * @example 1
                             */
                            supplier_id: number;
                            /** @example Maintenance */
                            asset_maintenance_type?: string;
                            /** @example deleteo */
                            title?: string;
                            /**
                             * @default 0
                             * @example 0
                             */
                            is_warranty: number;
                            /** @example 2022-11-16T08:00:00.000000Z */
                            start_date?: string;
                            completion_date?: unknown;
                            asset_maintenance_time?: unknown;
                            notes?: unknown;
                            cost?: unknown;
                            /** @example 2022-11-15T17:25:48.000000Z */
                            deleted_at?: string;
                            /** @example 2022-11-15T17:25:17.000000Z */
                            created_at?: string;
                            /** @example 2022-11-15T17:25:48.000000Z */
                            updated_at?: string;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                            asset?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                name?: unknown;
                                /** @example 893278223 */
                                asset_tag?: string;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                model_id: number;
                                /** @example c65ac2b6-bad7-34ef-86d0-b2f9b4abb83f */
                                serial?: string;
                                /** @example 2022-01-19T08:00:00.000000Z */
                                purchase_date?: string;
                                /** @example 551.40 */
                                purchase_cost?: string;
                                /** @example 19494754 */
                                order_number?: string;
                                assigned_to?: unknown;
                                /** @example Created by DB seeder */
                                notes?: string;
                                image?: unknown;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                user_id: number;
                                /** @example 2022-11-15T16:42:06.000000Z */
                                created_at?: string;
                                /** @example 2022-11-15T16:42:37.000000Z */
                                updated_at?: string;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                physical: number;
                                deleted_at?: unknown;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                status_id: number;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                archived: number;
                                warranty_months?: unknown;
                                depreciate?: unknown;
                                /**
                                 * @default 0
                                 * @example 3
                                 */
                                supplier_id: number;
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                requestable: number;
                                /**
                                 * @default 0
                                 * @example 4
                                 */
                                rtd_location_id: number;
                                accepted?: unknown;
                                last_checkout?: unknown;
                                expected_checkin?: unknown;
                                company_id?: unknown;
                                assigned_type?: unknown;
                                last_audit_date?: unknown;
                                next_audit_date?: unknown;
                                /**
                                 * @default 0
                                 * @example 4
                                 */
                                location_id: number;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                checkin_counter: number;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                checkout_counter: number;
                                /**
                                 * @default 0
                                 * @example 0
                                 */
                                requests_counter: number;
                                _snipeit_imei_1?: unknown;
                                _snipeit_phone_number_2?: unknown;
                                _snipeit_ram_3?: unknown;
                                _snipeit_cpu_4?: unknown;
                                _snipeit_mac_address_5?: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    componentsidassets: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "accessories-checkout": {
        parameters: {
            query?: {
                limit?: number;
                offset?: string;
            };
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description User ID of a user to check an accessory out to
                     */
                    assigned_user: number;
                    /** @description Note comment on the checkout */
                    note?: string;
                    /**
                     * Format: int32
                     * @default 1
                     */
                    checkout_qty?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "accessories-checkin": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description This is the ID of the accessory+user relationships in the accessories_users table */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    fieldsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID number of the custom field */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "update-fields": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name: string;
                    /**
                     * @description The type of form field you want to display
                     * @enum {string}
                     */
                    element: "text" | "textarea" | "checkbox" | "radio" | "listbox";
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "fieldsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example The field was deleted successfully. */
                        messages?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "fieldsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description Model name */
                    name?: string;
                    /**
                     * @description The type of form field you want to display
                     * @enum {string}
                     */
                    element?: "text" | "textarea" | "checkbox" | "radio" | "listbox";
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    accessoriesidcheckedout: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    reportsactivity: {
        parameters: {
            query?: {
                /** @description Specify the number of results you wish to return. Defaults to 50, but we have it set to 2 by default so the API explorer doesn't scroll forever. */
                limit?: number;
                /** @description The offset from the start of results to use in order to page through the result set */
                offset?: number;
                /** @description String to search on */
                search?: string;
                /** @description The type of target (entity something is checked out to) you're searching against. `App\Models\User`, etc. Required when passing target_id. */
                target_type?: string;
                /** @description The ID of the target you're querying against. Required if passing target_type */
                target_id?: number;
                /** @description The type of item you're searching against. `App\Models\Asset`, etc. Required when passing item_id. */
                item_type?: "asset" | "accessory" | "consumable" | "component" | "user";
                /** @description The ID of the item you're querying against. Required if passing item_type */
                item_id?: number;
                /** @description The action type you'e querying against. Example values here are: "add seats", "checkin from", "checkout", "update" */
                action_type?: "checkout" | "checkin from" | "update" | "create" | "delete" | "audit" | "uploaded" | "accepted" | "declined" | "requested";
                /** @description Ascending or descending order (defaults to desc if no value is given) */
                order?: "asc" | "desc";
                /** @description What column the results should be sorted by (defaults to created_at date if no value is given) */
                sort?: "id" | "created_at" | "target_id" | "user_id" | "accept_signature" | "action_type" | "note (defaults to desc if not value is given)";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    consumablesidcheckout: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description User ID of a user to check an accessory out to
                     */
                    assigned_to?: number;
                    /** Format: int32 */
                    checkout_qty?: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    fieldsiddisassociate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description Fieldset ID
                     */
                    fieldset_id: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    "fields-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 6
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example IMEI */
                            name?: string;
                            /** @example _snipeit_imei_1 */
                            db_column_name?: string;
                            /** @example regex:/^[0-9]{15}$/ */
                            format?: string;
                            field_values?: unknown;
                            field_values_array?: unknown;
                            /** @example text */
                            type?: string;
                            /**
                             * @default true
                             * @example false
                             */
                            required: boolean;
                            created_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "fields-2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** @description The field's name, which is also the form label */
                    name: string;
                    /**
                     * @description Form field type that should be displayed.
                     * @enum {string}
                     */
                    element: "text" | "textarea" | "checkbox" | "radio" | "listbox";
                    /** @description In the case of list boxes, etc, this should be a list of the options available */
                    field_values?: string;
                    /**
                     * @description Whether or not to show the custom field in email notifications
                     * @default false
                     */
                    show_in_email?: boolean;
                    /** @description Validation constraints on this field */
                    format?: string;
                    /**
                     * @description Whether the field should be encrypted. (This can cause issues if you change it after the field was created.)
                     * @default false
                     */
                    field_encrypted?: boolean;
                    /** @description Any additional text you wish to display under the new form field to make it clearer what the gauges should be. */
                    help_text?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    fieldsidassociate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Custom field ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description Fieldset ID
                     */
                    fieldset_id: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    componentsidcheckin: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the record in the components_assets *join* record */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description Quantity of the components to check in from the asset
                     */
                    checkin_qty: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    fieldsetsidfields: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID number of the fieldset */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 3
                             */
                            id: number;
                            /** @example RAM */
                            name?: string;
                            /** @example _snipeit_ram_3 */
                            db_column_name?: string;
                            /** @example ANY */
                            format?: string;
                            field_values?: unknown;
                            field_values_array?: unknown;
                            /** @example text */
                            type?: string;
                            /**
                             * @default 0
                             * @example 0
                             */
                            required: number;
                            created_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                            updated_at?: {
                                /** @example 2020-11-27 21:05:14 */
                                datetime?: string;
                                /** @example Fri Nov 27, 2020 9:05PM */
                                formatted?: string;
                            };
                        }[];
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Fieldset not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
    componentsidcheckout: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description ID of the component to check out */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description User ID of an asset to check a component out to
                     */
                    assigned_to: number;
                    /**
                     * Format: int32
                     * @description Quantity of the components to check out to the asset
                     */
                    assigned_qty: number;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    usersme: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    groupsid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "groupsid-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: json */
                    permissions?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "groupsid-3": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "groupsid-4": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Group ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** Format: json */
                    permissions?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    backupsdownloadfile: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The short name of the file to download */
                file: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "backups-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    licensesidseatsseat_id: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not name) of the license. */
                id: number;
                /** @description The Unique Seat ID for this seat for this license */
                seat_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 10
                         */
                        id: number;
                        /**
                         * @default 0
                         * @example 1
                         */
                        license_id: number;
                        assigned_user?: {
                            /**
                             * @default 0
                             * @example 1
                             */
                            id: number;
                            /** @example Admin User */
                            name?: string;
                            department?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Human Resources */
                                name?: string;
                            };
                        };
                        assigned_asset?: unknown;
                        location?: {
                            /**
                             * @default 0
                             * @example 5
                             */
                            id: number;
                            /** @example Hubertchester */
                            name?: string;
                        };
                        /**
                         * @default true
                         * @example false
                         */
                        reassignable: boolean;
                        /**
                         * @default true
                         * @example false
                         */
                        user_can_checkout: boolean;
                        available_actions?: {
                            /**
                             * @default true
                             * @example true
                             */
                            checkout: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            checkin: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            clone: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            update: boolean;
                            /**
                             * @default true
                             * @example true
                             */
                            delete: boolean;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "licensesidseatsseat_id-1": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not name) of the license. */
                id: number;
                /** @description The Seat ID (unique seat identifier) of the license seat that will be modified */
                seat_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description The User ID to assign the license to
                     */
                    assigned_to?: number;
                    /**
                     * Format: int32
                     * @description The Asset ID to assign this license to
                     */
                    asset_id?: number;
                    /** @description Note to be associated with the checkin/checkout */
                    note?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example License updated successfully. */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 10
                             */
                            id: number;
                            /**
                             * @default 0
                             * @example 1
                             */
                            license_id: number;
                            /** @example 2 */
                            assigned_to?: string;
                            notes?: unknown;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                            /** @example 2021-10-12T21:01:10.000000Z */
                            created_at?: string;
                            /** @example 2022-08-08T23:23:00.000000Z */
                            updated_at?: string;
                            deleted_at?: unknown;
                            asset_id?: unknown;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "licensesidseatsseat_id-2": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not name) of the license. */
                id: number;
                /** @description The Seat ID (unique seat identifier) of the license seat that will be modified */
                seat_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /**
                     * Format: int32
                     * @description The User ID to assign the license to
                     */
                    assigned_to?: number;
                    /**
                     * Format: int32
                     * @description The Asset ID to assign this license to
                     */
                    asset_id?: number;
                    /** @description Note to be associated with the checkin/checkout */
                    note?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example License updated successfully. */
                        messages?: string;
                        payload?: {
                            /**
                             * @default 0
                             * @example 10
                             */
                            id: number;
                            /**
                             * @default 0
                             * @example 1
                             */
                            license_id: number;
                            /** @example 2 */
                            assigned_to?: string;
                            notes?: unknown;
                            /**
                             * @default 0
                             * @example 1
                             */
                            user_id: number;
                            /** @example 2021-10-12T21:01:10.000000Z */
                            created_at?: string;
                            /** @example 2022-08-08T23:23:00.000000Z */
                            updated_at?: string;
                            deleted_at?: unknown;
                            asset_id?: unknown;
                        };
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "groups-1": {
        parameters: {
            query?: {
                name?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "groupsid-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    name: string;
                    /** @description The string value should be a JSON document of permissions, but expressed as a string */
                    permissions?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    suppliersid: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    hardwareidrestore: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example success */
                        status?: string;
                        /** @example Asset audit successfully restored. */
                        messages?: string;
                        payload?: {
                            /** @example SNIPE-IT-RULES */
                            asset_tag?: string;
                            /** @example  */
                            note?: string;
                            next_audit_date?: {
                                /** @example 2019-07-05 00:00:00 */
                                datetime?: string;
                                /** @example Fri Jul 05, 2019 12:00AM */
                                formatted?: string;
                            };
                        };
                    };
                };
            };
        };
    };
    licensesidseats: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id (not name) of the license. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 10
                         */
                        total: number;
                        rows?: {
                            /**
                             * @default 0
                             * @example 10
                             */
                            id: number;
                            /**
                             * @default 0
                             * @example 1
                             */
                            license_id: number;
                            assigned_user?: {
                                /**
                                 * @default 0
                                 * @example 1
                                 */
                                id: number;
                                /** @example Admin User */
                                name?: string;
                                department?: {
                                    /**
                                     * @default 0
                                     * @example 1
                                     */
                                    id: number;
                                    /** @example Human Resources */
                                    name?: string;
                                };
                            };
                            assigned_asset?: unknown;
                            location?: {
                                /**
                                 * @default 0
                                 * @example 5
                                 */
                                id: number;
                                /** @example Hubertchester */
                                name?: string;
                            };
                            /**
                             * @default true
                             * @example false
                             */
                            reassignable: boolean;
                            /**
                             * @default true
                             * @example false
                             */
                            user_can_checkout: boolean;
                            /** @example Seat 1 */
                            name?: string;
                            available_actions?: {
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkout: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                checkin: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                clone: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                update: boolean;
                                /**
                                 * @default true
                                 * @example true
                                 */
                                delete: boolean;
                            };
                        }[];
                    };
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    suppliers: {
        parameters: {
            query?: {
                name?: string;
                address?: string;
                address2?: string;
                city?: string;
                zip?: string;
                country?: string;
                fax?: string;
                email?: string;
                url?: string;
                notes?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "maintenances-copy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    title: string;
                    /** Format: int32 */
                    asset_id: number;
                    /** Format: int32 */
                    supplier_id: number;
                    is_warranty?: boolean;
                    /** Format: float */
                    cost?: number;
                    notes?: string;
                    /** @enum {string} */
                    asset_maintenance_type: "Maintenance" | "Repair" | "PAT Test" | "Upgrade" | "Hardware Support" | "Software Support";
                    /** Format: date */
                    start_date: string;
                    /** Format: date */
                    completion_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "maintenances-copy-1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    title?: string;
                    /** Format: int32 */
                    asset_id?: number;
                    /** Format: int32 */
                    supplier_id?: number;
                    is_warranty?: boolean;
                    /** Format: float */
                    cost?: number;
                    notes?: string;
                    /** @enum {string} */
                    asset_maintenance_type: "Maintenance" | "Repair" | "PAT Test" | "Upgrade" | "Hardware Support" | "Software Support";
                    /** Format: date */
                    start_date?: string;
                    /** Format: date */
                    completion_date?: string;
                };
            };
        };
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "users-restore": {
        parameters: {
            query?: never;
            header?: {
                Accept?: string;
            };
            path: {
                /** @description User ID of a deleted user */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 400 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    "models-files-list": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Model ID */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 200 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /**
                         * @default 0
                         * @example 3
                         */
                        id: number;
                        /** @example Rohan-Bergstrom */
                        name?: string;
                        /** @example 2017-01-11 03:31:25 */
                        created_at?: string;
                        /** @example 2017-01-11 03:31:25 */
                        updated_at?: string;
                    } | {
                        /** @example error */
                        status?: string;
                        /** @example Company not found */
                        messages?: string;
                    };
                };
            };
            /** @description 401 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Unauthorized. */
                        message?: string;
                    };
                };
            };
            /** @description 405 */
            405: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example Method not allowed */
                        messages?: string;
                    };
                };
            };
        };
    };
}
